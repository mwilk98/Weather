[{"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\index.js":"1","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\App.js":"2","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\reportWebVitals.js":"3","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\Navbar.js":"4","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\CurrentWeather.js":"5","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\UserPanel\\UserPanel.js":"6","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\Button.js":"7","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\Dropdown.js":"8","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\WeatherItem.js":"9","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Form\\Form.js":"10","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\MenuItems.js":"11","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\AirCondition\\AirCondition.js":"12","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\WeatherAlerts\\WeatherAlerts.js":"13","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalDate.js":"14","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalTime.js":"15","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalCelsius.js":"16","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalWindSpeed.js":"17","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\ForecastDailyItem.js":"18","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\ForecastHourlyItem.js":"19","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\AirCondition\\AirConditionItem.js":"20","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\WeatherAlerts\\WeatherAlertsItem.js":"21","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\UserPanel\\UserWeatherItem.js":"22","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Compare\\Compare.js":"23"},{"size":500,"mtime":1622401845000,"results":"24","hashOfConfig":"25"},{"size":905,"mtime":1622470682374,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1622401845000,"results":"27","hashOfConfig":"25"},{"size":2461,"mtime":1622470570790,"results":"28","hashOfConfig":"25"},{"size":13821,"mtime":1622549574459,"results":"29","hashOfConfig":"25"},{"size":3080,"mtime":1622549749171,"results":"30","hashOfConfig":"25"},{"size":229,"mtime":1622401845000,"results":"31","hashOfConfig":"25"},{"size":771,"mtime":1622401845000,"results":"32","hashOfConfig":"25"},{"size":2534,"mtime":1622401845000,"results":"33","hashOfConfig":"25"},{"size":346,"mtime":1622401845000,"results":"34","hashOfConfig":"25"},{"size":248,"mtime":1622401845000,"results":"35","hashOfConfig":"25"},{"size":3896,"mtime":1622453053219,"results":"36","hashOfConfig":"25"},{"size":3461,"mtime":1622453304946,"results":"37","hashOfConfig":"25"},{"size":265,"mtime":1622401845000,"results":"38","hashOfConfig":"25"},{"size":303,"mtime":1622401845000,"results":"39","hashOfConfig":"25"},{"size":120,"mtime":1622401845000,"results":"40","hashOfConfig":"25"},{"size":121,"mtime":1622401845000,"results":"41","hashOfConfig":"25"},{"size":948,"mtime":1622401845000,"results":"42","hashOfConfig":"25"},{"size":999,"mtime":1622401845000,"results":"43","hashOfConfig":"25"},{"size":1877,"mtime":1622453238530,"results":"44","hashOfConfig":"25"},{"size":1349,"mtime":1622453269018,"results":"45","hashOfConfig":"25"},{"size":706,"mtime":1622456508380,"results":"46","hashOfConfig":"25"},{"size":8522,"mtime":1622550533628,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1le5gqo",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\index.js",[],["103","104"],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\App.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\reportWebVitals.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\Navbar.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\CurrentWeather.js",["105","106","107","108","109","110","111"],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\UserPanel\\UserPanel.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\Button.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\Dropdown.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\WeatherItem.js",["112","113","114","115","116","117","118","119","120","121","122","123"],"import React from 'react'\nconst WeatherItem = props => {\n    const{\n        city,\n        country,\n        image,\n        weather,\n        date,\n        time,\n        temp,\n        tempMax,\n        tempMin,\n        tempFeel,\n        pressure,\n        wind,\n        clouds,\n        humidity,\n        sunrise,\n        sunset,\n        background,\n        error} = props.weather\n\n        let content = null\n        \n\n        if(!error && city){\n            content = (\n                <div className=\"card\" >\n                    <div className=\"face face1\">\n                        <div className=\"content\">\n                        <p>{city} {country}</p>\n                        <p>{date} {time}</p>\n                        <p><img src={image} width=\"90\" height=\"90\" /></p>\n                        <h3>{weather}</h3>\n                        <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" /> {temp}&deg;</p>\n                        </div>\n                        </div>\n                        <div className=\"face face2\">\n                            <div className=\"content\">\n                                <p><img src={weatherIcons[1]} width=\"20\" height=\"20\" />{clouds}% <img src={weatherIcons[4]} width=\"20\" height=\"20\" />{humidity}%</p>\n                                <p></p>\n                                <p><img src={weatherIcons[2]} width=\"20\" height=\"20\" />{sunrise} <img src={weatherIcons[3]} width=\"20\" height=\"20\" />{sunset}</p>\n                                <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" />odczuwalna {tempFeel}&deg;</p>\n                                <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" />max:{tempMax}&deg; <img src={weatherIcons[5]} width=\"20\" height=\"20\" />min:{tempMin}&deg;</p>  \n                                <p><img src={weatherIcons[6]} width=\"20\" height=\"20\" />{pressure} hPa</p>  \n                                <p><img src={weatherIcons[7]} width=\"20\" height=\"20\" />{wind}km/h</p>\n                            </div>\n                        </div>\n                </div>\n            )\n        }\n    return (<div className=\"weatherCard\">\n        {error ? `Brak danych dla podanego maista - ${city} nie istnieje lub zostało błędnie wpisane!` : content}\n\n    </div>\n    )}\n\n    const weatherIcons = {\n        1:'/images/clouds.png',\n        2:'/images/sunrise.png',\n        3:'/images/sunset.png',\n        4:'/images/humidity.png',\n        5:'/images/temp.webp',\n        6:'/images/pressure.png',\n        7:'/images/wind.png',\n    }\nexport default WeatherItem","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Form\\Form.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\Menu\\MenuItems.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\AirCondition\\AirCondition.js",["124"],"import React from 'react'\nimport Form from '../Form/Form'\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport AirConditionItem from './AirConditionItem'\nimport './AirCondition.css';\n\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\n\n\nclass AirCondition extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n        value:\"\",\n        city:\"\",\n        country:\"\",\n        lat:undefined,\n        lon:undefined,\n        aqi:undefined,\n        co:undefined,\n        nh3:undefined,\n        no:undefined,\n        no2:undefined,\n        o3:undefined,\n        pm2_5:undefined,\n        pm10:undefined,\n        so2:undefined,\n        error:false\n        }\n    }\n    \n    getAir = (e) =>{\n        \n        e.preventDefault()\n          \n          fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${API_key}`)\n          .then(response => {\n              if(response.ok){\n                  return response\n              }\n              throw Error(\"Błąd pobierania danych z API\")\n          })\n          .then(response => response.json())\n          .then(response => {\n              const localTime = new Date().toLocaleString()\n              console.log(response)\n              this.setState(state =>({\n                city:state.value,\n                country:response.sys.country,\n                date:CalDate(response.dt),\n                time:CalTime(response.dt,response.timezone),\n                lat:response.coord.lat,\n                lon:response.coord.lon, \n                error:false\n              }))\n              fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${response.coord.lat}&lon=${response.coord.lon}&appid=${API_key}`)\n          .then(response2 => {\n              if(response2.ok){\n                  return response2\n              }\n              throw Error(\"Błąd pobierania danych z API\")\n          })\n          .then(response2 => response2.json())\n          .then(response2 => {\n              console.log(response2)\n              this.setState(state =>({\n                aqi:response2.list[0].main.aqi,\n                co:response2.list[0].components.co,\n                nh3:response2.list[0].components.nh3,\n                no:response2.list[0].components.no,\n                no2:response2.list[0].components.no2,\n                o3:response2.list[0].components.o3,\n                pm2_5:response2.list[0].components.pm2_5,\n                pm10:response2.list[0].components.pm10,\n                so2:response2.list[0].components.so2,\n                error:false\n              }))\n          })\n          .catch(err =>{\n            console.log(err)\n            this.setState(prevState =>{\n                return{\n                error:true,\n                city:prevState.city\n            }})\n        })\n          })\n          .catch(err =>{\n            console.log(err)\n            this.setState(prevState =>{\n                return{\n                error:true,\n                city:prevState.city\n            }})\n        })\n    }\n    inputHandler=(e)=>{\n        this.setState({\n            value:e.target.value\n        })\n    }\n    submitHandler=(e)=>{\n        this.getAir(e)\n    }\n    render(){\n        \n        return(\n            <div className=\"main\"style={{ \n                backgroundImage: `url(\"/images/bg_air.jpg\")` \n              }}>\n                <div className=\"city-form\">\n                <Form \n                value={this.state.value}  \n                handler={this.inputHandler}\n                submit={this.submitHandler}\n                /> \n                </div> \n                <div>\n                {this.state.city ?(\n                    <AirConditionItem air={this.state}/>   \n                ):null}\n                </div>\n                \n                </div>\n\n            \n        )\n    }\n}\nexport default AirCondition","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\WeatherAlerts\\WeatherAlerts.js",["125"],"import React from 'react'\nimport Form from '../Form/Form'\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport WeatherAlertsItem from './WeatherAlertsItem'\nimport './WeatherAlerts.css';\n\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\n\n\nclass WeatherAlerts extends React.Component{\n    state={\n        value:\"\",\n        city:\"\",\n        country:\"\",\n        description:\"\",\n        end:undefined,\n        event:\"\",\n        sender_name:\"\",\n        start:undefined,\n        error:false\n    }\n    getAir = (e) =>{\n        \n        e.preventDefault()\n          \n          fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`)\n          .then(response => {\n              if(response.ok){\n                  return response\n              }\n              throw Error(\"Błąd pobierania danych z API\")\n          })\n          .then(response => response.json())\n          .then(response => {\n              const localTime = new Date().toLocaleString()\n              console.log(response)\n              this.setState(state =>({\n                city:state.value,\n                country:response.sys.country,\n                date:CalDate(response.dt),\n                time:CalTime(response.dt,response.timezone),\n                lat:response.coord.lat,\n                lon:response.coord.lon, \n                error:false\n              }))\n              fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.coord.lat}&lon=${response.coord.lon}&lang=pl&appid=${API_key}`)\n          .then(response2 => {\n              if(response2.ok){\n                  return response2\n              }\n              throw Error(\"Błąd pobierania danych z API\")\n          })\n          .then(response2 => response2.json())\n          .then(response2 => {\n              console.log(response2)\n              if(response2.alerts){\n                this.setState(state =>({\n                        description:response2.alerts[0].description,\n                        error:false\n                      }))   \n              }else{\n                this.setState(state =>({\n                        description:\"brak alertów\",\n                        error:false\n                      }))\n              }\n          })\n          .catch(err =>{\n            console.log(err)\n            this.setState(prevState =>{\n                return{\n                error:true,\n                city:prevState.city\n            }})\n        })\n          })\n          .catch(err =>{\n            console.log(err)\n            this.setState(prevState =>{\n                return{\n                error:true,\n                city:prevState.city\n            }})\n        })\n    }\n    inputHandler=(e)=>{\n        this.setState({\n            value:e.target.value\n        })\n    }\n    submitHandler=(e)=>{\n        this.getAir(e)\n    }\n    render(){\n        \n        return(\n            <div className=\"main\"style={{ \n                backgroundImage: `url(\"/images/bg_alerts.png\")` \n              }}>\n                <div className=\"city-form\">\n                <Form \n                value={this.state.value}  \n                handler={this.inputHandler}\n                submit={this.submitHandler}\n                /> \n                </div> \n                <div>\n                <WeatherAlertsItem alert={this.state}/> \n                </div>\n            </div>\n            \n        )\n    }\n}\nexport default WeatherAlerts","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalDate.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalTime.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalCelsius.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Functions\\CalWindSpeed.js",[],"C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\ForecastDailyItem.js",["126","127","128"],"import React from 'react'\n\nconst ForecastDailyItem=({element})=>{\n    const {id,date,image,background,weather,temp,pressure,wind} = element;\n    return ( \n        <div className=\"weatherCard\">\n            <div className=\"card\" >\n                <div className=\"face face1\">\n                    <div className=\"content\">\n                        <h3>DZIENNA:</h3>\n                        <p>{date}</p>\n                        <p><img src={image} width=\"100\" height=\"100\" /></p>\n                        <p>{weather} </p>\n                    </div>\n                </div>\n                <div className=\"face face2\">\n                    <div className=\"content\">\n                        <p>Temperatura: {temp}&deg;</p>\n                        <p>Ciśnienie: {pressure} hPa</p> \n                        <p>Wiatr: {wind} km/h</p>\n                    </div>\n                </div>\n           </div>\n        </div>\n    )\n}\n\nexport default ForecastDailyItem","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\currentWeather\\ForecastHourlyItem.js",["129","130","131"],"import React from 'react'\n\nconst ForecastHourlyItem=({element})=>{\n    const {id,date,time,image,background,weather,temp,pressure,wind} = element;\n    return (\n        <div className=\"weatherCard\">\n            <div className=\"card\" >\n                <div className=\"face face1\">\n                    <div className=\"content\">\n                        <h3>GODZINOWA:</h3>\n                        <p>{date}</p>\n                        <p><img src={image} width=\"100\" height=\"100\" /></p>\n                        <p>{time} </p>   \n                        <p>{weather}</p> \n                    </div>\n                </div>\n                <div className=\"face face2\">\n                    <div className=\"content\">\n                        <p>Temperatura: {temp}&deg;</p>\n                        <p>Ciśnienie: {pressure} hPa </p>\n                        <p>Wiatr: {wind} km/h</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ForecastHourlyItem","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\AirCondition\\AirConditionItem.js",["132"],"import React from 'react'\nconst AirConditionItem = props => {\n    const{\n        city,\n        country,\n        date,\n        time,\n        aqi,\n        co,\n        nh3,\n        no,\n        no2,\n        o3,\n        pm2_5,\n        pm10,\n        so2,  \n        error} = props.air\n\n        let content = null\n        \n\n        if(!error && city){\n            content = (\n                <div className=\"weatherCard\">\n                    <div className=\"card\" >\n                        <div className=\"face face1\">\n                            <div className=\"content\">\n                                <p>{city}</p>\n                                <p>{country}</p>\n                                <p>{date}</p>\n                                <p>{time}</p>\n                                <p>{aqi}</p>\n                        </div>\n                    </div>\n                    <div className=\"face face2\">\n                        <div className=\"content\">\n                            <p>{co}</p>\n                            <p>{nh3}</p>\n                            <p>{no}</p>\n                            <p>{no2}</p>\n                            <p>{o3}</p>\n                            <p>{pm2_5}</p>\n                            <p>{pm10}</p>\n                            <p>{so2}</p>  \n                        </div>\n                    </div>\n                </div>\n            </div>\n            )\n        }\n    return (<div className=\"weatherCard\">\n        {error ? `Brak danych dla podanego maista - ${city} nie istnieje lub zostało błędnie wpisane!` : content}\n\n    </div>\n    )}\n\n    const weatherIcons = {\n        1:'/images/clouds.png',\n        2:'/images/sunrise.png',\n        3:'/images/sunset.png',\n        4:'/images/humidity.png',\n        5:'/images/temp.webp',\n        6:'/images/pressure.png',\n        7:'/images/wind.png',\n    }\nexport default AirConditionItem","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\WeatherAlerts\\WeatherAlertsItem.js",["133"],"import React from 'react'\r\nconst WeatherAlertsItem = props => {\r\n    const{\r\n        city,\r\n        country,\r\n        date,\r\n        time,\r\n        description,  \r\n        error} = props.alert\r\n\r\n        let content = null\r\n        \r\n\r\n        if(!error && city){\r\n            content = (\r\n                <div className=\"alertCard\">\r\n                    <div className=\"card\" >\r\n                        <div className=\"face face1\">\r\n                            <div className=\"content\">\r\n                                <p>{city}</p>\r\n                                <p>{country}</p>\r\n                                <p>{date}</p>\r\n                                <p>{time}</p> \r\n                                <p>{description}</p> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n    return (<div className=\"alertCard\">\r\n        {error ? `Brak danych dla podanego maista - ${city} nie istnieje lub zostało błędnie wpisane!` : content}\r\n\r\n    </div>\r\n    )}\r\n\r\n    const weatherIcons = {\r\n        1:'/images/clouds.png',\r\n        2:'/images/sunrise.png',\r\n        3:'/images/sunset.png',\r\n        4:'/images/humidity.png',\r\n        5:'/images/temp.webp',\r\n        6:'/images/pressure.png',\r\n        7:'/images/wind.png',\r\n    }\r\nexport default WeatherAlertsItem","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\UserPanel\\UserWeatherItem.js",["134"],"import React from 'react'\r\n\r\nconst ForecastDailyItem=({element})=>{\r\n    const {id,city,weather} = element;\r\n    return ( \r\n        <div className=\"weatherCard\">\r\n            <div className=\"card\" >\r\n                <div className=\"face face1\">\r\n                    <div className=\"content\">\r\n                        <h3>DZIENNA:</h3>\r\n                        <p>{city}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"face face2\">\r\n                    <div className=\"content\">\r\n                        <p>Temperatura: {weather}</p>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForecastDailyItem","C:\\Users\\vened\\Desktop\\Pogoda\\my_weather\\client\\src\\components\\Compare\\Compare.js",["135","136","137","138","139","140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":38,"column":13,"nodeType":"147","messageId":"148","endLine":38,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":91,"column":21,"nodeType":"151","messageId":"152","endLine":91,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":138,"column":21,"nodeType":"151","messageId":"152","endLine":138,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":178,"column":9,"nodeType":"155","messageId":"156","endLine":178,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":209,"column":9,"nodeType":"155","messageId":"156","endLine":209,"endColumn":42},{"ruleId":"149","severity":1,"message":"150","line":220,"column":21,"nodeType":"151","messageId":"152","endLine":220,"endColumn":30},{"ruleId":"145","severity":1,"message":"157","line":341,"column":5,"nodeType":"147","messageId":"148","endLine":341,"endColumn":8},{"ruleId":"149","severity":1,"message":"158","line":20,"column":9,"nodeType":"151","messageId":"152","endLine":20,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":33,"column":28,"nodeType":"161","endLine":33,"endColumn":70},{"ruleId":"159","severity":1,"message":"160","line":35,"column":28,"nodeType":"161","endLine":35,"endColumn":80},{"ruleId":"159","severity":1,"message":"160","line":40,"column":36,"nodeType":"161","endLine":40,"endColumn":88},{"ruleId":"159","severity":1,"message":"160","line":40,"column":98,"nodeType":"161","endLine":40,"endColumn":150},{"ruleId":"159","severity":1,"message":"160","line":42,"column":36,"nodeType":"161","endLine":42,"endColumn":88},{"ruleId":"159","severity":1,"message":"160","line":42,"column":98,"nodeType":"161","endLine":42,"endColumn":150},{"ruleId":"159","severity":1,"message":"160","line":43,"column":36,"nodeType":"161","endLine":43,"endColumn":88},{"ruleId":"159","severity":1,"message":"160","line":44,"column":36,"nodeType":"161","endLine":44,"endColumn":88},{"ruleId":"159","severity":1,"message":"160","line":44,"column":107,"nodeType":"161","endLine":44,"endColumn":159},{"ruleId":"159","severity":1,"message":"160","line":45,"column":36,"nodeType":"161","endLine":45,"endColumn":88},{"ruleId":"159","severity":1,"message":"160","line":46,"column":36,"nodeType":"161","endLine":46,"endColumn":88},{"ruleId":"149","severity":1,"message":"150","line":46,"column":21,"nodeType":"151","messageId":"152","endLine":46,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":36,"column":21,"nodeType":"151","messageId":"152","endLine":36,"endColumn":30},{"ruleId":"149","severity":1,"message":"162","line":4,"column":12,"nodeType":"151","messageId":"152","endLine":4,"endColumn":14},{"ruleId":"149","severity":1,"message":"158","line":4,"column":26,"nodeType":"151","messageId":"152","endLine":4,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":12,"column":28,"nodeType":"161","endLine":12,"endColumn":72},{"ruleId":"149","severity":1,"message":"162","line":4,"column":12,"nodeType":"151","messageId":"152","endLine":4,"endColumn":14},{"ruleId":"149","severity":1,"message":"158","line":4,"column":31,"nodeType":"151","messageId":"152","endLine":4,"endColumn":41},{"ruleId":"159","severity":1,"message":"160","line":12,"column":28,"nodeType":"161","endLine":12,"endColumn":72},{"ruleId":"149","severity":1,"message":"163","line":57,"column":11,"nodeType":"151","messageId":"152","endLine":57,"endColumn":23},{"ruleId":"149","severity":1,"message":"163","line":37,"column":11,"nodeType":"151","messageId":"152","endLine":37,"endColumn":23},{"ruleId":"149","severity":1,"message":"162","line":4,"column":12,"nodeType":"151","messageId":"152","endLine":4,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":31,"column":19,"nodeType":"151","messageId":"152","endLine":31,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":81,"column":19,"nodeType":"151","messageId":"152","endLine":81,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":109,"column":19,"nodeType":"151","messageId":"152","endLine":109,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":142,"column":19,"nodeType":"151","messageId":"152","endLine":142,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":170,"column":19,"nodeType":"151","messageId":"152","endLine":170,"endColumn":28},{"ruleId":"145","severity":1,"message":"157","line":232,"column":5,"nodeType":"147","messageId":"148","endLine":232,"endColumn":8},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","no-unused-vars","'localTime' is assigned a value but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","Duplicate key '500'.","'background' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'weatherIcons' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]