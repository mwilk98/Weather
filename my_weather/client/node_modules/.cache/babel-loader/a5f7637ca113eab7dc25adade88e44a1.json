{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\forecast\\\\Forecast.js\";\nimport React from 'react';\nimport ForecastDailyItem from './ForecastDailyItem';\nimport ForecastHourlyItem from './ForecastHourlyItem';\nimport CurrentWeather from '../currentWeather/CurrentWeather';\nimport './Forecast.css';\nimport CalDate from '../Functions/CalDate';\nimport CalCelsius from '../Functions/CalCelsius';\nimport CalWindSpeed from '../Functions/CalWindSpeed';\nimport CalTime from '../Functions/CalTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"157d33f8987d245bc6a1997408e90015\";\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextProperty = () => {\n      const newIndex = this.state.property.id + 1;\n      this.setState({\n        property: this.state.forecastDailyElements[newIndex]\n      });\n    };\n\n    this.prevProperty = () => {\n      const newIndex = this.state.property.id - 1;\n      this.setState({\n        property: this.state.forecastDailyElements[newIndex]\n      });\n    };\n\n    this.nextProperty2 = () => {\n      const newIndex = this.state.property2.id + 1;\n      this.setState({\n        property2: this.state.elements2[newIndex]\n      });\n    };\n\n    this.prevProperty2 = () => {\n      const newIndex = this.state.property2.id - 1;\n      this.setState({\n        property2: this.state.elements2[newIndex]\n      });\n    };\n\n    this.getForecastDaily = props => {\n      this.state.forecastDailyElements.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.props.lat}&lon=${this.props.lon}&appid=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElements: [...this.state.forecastDailyElements, {\n              'id': i,\n              'date': CalDate(response.daily[i].dt),\n              'weather': response.daily[i].weather[0].description,\n              'temp': CalCelsius(response.daily[i].temp.day),\n              'pressure': response.daily[i].pressure,\n              'wind': CalWindSpeed(response.daily[i].wind_speed)\n            }],\n            property: this.state.forecastDailyElements[0]\n          });\n        }\n      });\n      console.log(this.property);\n    };\n\n    this.getForecastHourly = props => {\n      this.state.elements2.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.props.lat}&lon=${this.props.lon}&appid=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n\n        for (var i = 0; i < 48; i++) {\n          this.setState({\n            elements2: [...this.state.elements2, {\n              'id': i,\n              'date': CalDate(response.hourly[i].dt),\n              'time': CalTime(response.hourly[i].dt, response.timezone_offset),\n              'weather': response.hourly[i].weather[0].description,\n              'temp': CalCelsius(response.hourly[i].temp),\n              'pressure': response.hourly[i].pressure,\n              'wind': CalWindSpeed(response.hourly[i].wind_speed)\n            }],\n            property2: this.state.elements2[0]\n          });\n        }\n      });\n    };\n\n    this.state = {\n      forecastDailyElements: [],\n      elements2: [],\n      property: undefined,\n      property2: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.getForecastDaily();\n    this.getForecastHourly();\n  }\n\n  render() {\n    const {\n      forecastDailyElements,\n      elements2,\n      property,\n      property2\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getForecastDaily.bind(this),\n        children: \"Refresh Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getForecastHourly.bind(this),\n        children: \"Refresh Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), property ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.nextProperty(),\n        disabled: property.id === forecastDailyElements.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this) : null, property ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.prevProperty(),\n        disabled: property.id === 0,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this) : null, property2 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.nextProperty2(),\n        disabled: property2.id === elements2.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this) : null, property2 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.prevProperty2(),\n        disabled: property2.id === 0,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this) : null, property ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-slider\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-slider-wrapper\",\n          style: {\n            'transform': `translateX(-${property.id * (100 / forecastDailyElements.length)}%)`\n          },\n          children: forecastDailyElements.map(fde => /*#__PURE__*/_jsxDEV(ForecastDailyItem, {\n            element: fde\n          }, fde.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 51\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this) : null, property2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-slider2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-slider-wrapper2\",\n          style: {\n            'transform': `translateX(-${property2.id * (100 / elements2.length)}%)`\n          },\n          children: elements2.map(elements2 => /*#__PURE__*/_jsxDEV(ForecastHourlyItem, {\n            element: elements2\n          }, elements2.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/forecast/Forecast.js"],"names":["React","ForecastDailyItem","ForecastHourlyItem","CurrentWeather","CalDate","CalCelsius","CalWindSpeed","CalTime","API_key","Forecast","Component","constructor","props","nextProperty","newIndex","state","property","id","setState","forecastDailyElements","prevProperty","nextProperty2","property2","elements2","prevProperty2","getForecastDaily","length","fetch","lat","lon","then","response","ok","Error","json","localTime","Date","toLocaleString","console","log","i","daily","dt","weather","description","temp","day","pressure","wind_speed","getForecastHourly","hourly","timezone_offset","undefined","componentDidMount","render","bind","map","fde"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ForecastDailyItem from './ForecastDailyItem';\r\nimport ForecastHourlyItem from './ForecastHourlyItem';\r\nimport CurrentWeather from '../currentWeather/CurrentWeather'\r\nimport './Forecast.css';\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport CalTime from '../Functions/CalTime';\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\n\r\nclass Forecast extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            forecastDailyElements:[\r\n            ],\r\n            elements2:[\r\n            ],\r\n            property: undefined,\r\n            property2: undefined\r\n        }\r\n    }\r\n\r\n    nextProperty = () => {\r\n        const newIndex = this.state.property.id +1\r\n        this.setState({\r\n            property: this.state.forecastDailyElements[newIndex]\r\n        })\r\n    }\r\n\r\n    prevProperty = () => {\r\n        const newIndex = this.state.property.id -1\r\n        this.setState({\r\n            property: this.state.forecastDailyElements[newIndex]\r\n        })\r\n    }\r\n\r\n    nextProperty2 = () => {\r\n        const newIndex = this.state.property2.id +1\r\n        this.setState({\r\n            property2: this.state.elements2[newIndex]\r\n        })\r\n    }\r\n    \r\n    prevProperty2 = () => {\r\n        const newIndex = this.state.property2.id -1\r\n        this.setState({\r\n            property2: this.state.elements2[newIndex]\r\n        })\r\n    }\r\n    \r\n    getForecastDaily = (props)=>{\r\n\r\n        this.state.forecastDailyElements.length=0\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.props.lat}&lon=${this.props.lon}&appid=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              const localTime = new Date().toLocaleString()\r\n              console.log(response)\r\n              for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElements:[...this.state.forecastDailyElements,{\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'temp':CalCelsius(response.daily[i].temp.day),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                    }],\r\n                    property:this.state.forecastDailyElements[0]\r\n                })\r\n            }   \r\n          })\r\n        console.log(this.property)\r\n    }\r\n    getForecastHourly = (props)=>{\r\n        this.state.elements2.length=0\r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.props.lat}&lon=${this.props.lon}&appid=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              const localTime = new Date().toLocaleString()\r\n              console.log(response)\r\n              for (var i = 0; i < 48; i++) {\r\n                this.setState({\r\n                    elements2:[...this.state.elements2,{\r\n                        'id':i,\r\n                        'date':CalDate(response.hourly[i].dt),\r\n                        'time':CalTime(response.hourly[i].dt,response.timezone_offset),\r\n                        'weather':response.hourly[i].weather[0].description,\r\n                        'temp':CalCelsius(response.hourly[i].temp),\r\n                        'pressure':response.hourly[i].pressure,\r\n                        'wind':CalWindSpeed(response.hourly[i].wind_speed),\r\n                    }],\r\n                    property2:this.state.elements2[0]\r\n                })\r\n            }\r\n          })\r\n    }\r\n    componentDidMount(){\r\n       this.getForecastDaily()\r\n       this.getForecastHourly()  \r\n    }\r\n    render(){\r\n        const {forecastDailyElements, elements2, property, property2}=this.state\r\n\r\n        return(\r\n            <div className=\"main\">\r\n            \r\n                <button onClick={ this.getForecastDaily.bind(this) }>Refresh Component</button>\r\n\r\n                <button onClick={ this.getForecastHourly.bind(this) }>Refresh Component</button>\r\n\r\n                {property ?(\r\n                <button \r\n                onClick={() => this.nextProperty()} \r\n                disabled={property.id === forecastDailyElements.length-1}\r\n                >Next</button>\r\n                ):null}\r\n                \r\n                {property ?(\r\n                <button \r\n                onClick={() => this.prevProperty()} \r\n                disabled={property.id === 0}\r\n                >Prev</button>\r\n                ):null}\r\n\r\n                {property2 ?(\r\n                <button \r\n                onClick={() => this.nextProperty2()} \r\n                disabled={property2.id === elements2.length-1}\r\n                >Next</button>\r\n                ):null}\r\n                \r\n                {property2 ?(\r\n                <button \r\n                onClick={() => this.prevProperty2()} \r\n                disabled={property2.id === 0}\r\n                >Prev</button>\r\n                ):null}\r\n\r\n                {property ?(\r\n                <div className=\"cards-slider\">\r\n                <div className=\"cards-slider-wrapper\" style={{\r\n                    'transform':`translateX(-${property.id*(100/forecastDailyElements.length)}%)`\r\n                }}>\r\n                {forecastDailyElements.map(fde => <ForecastDailyItem key={fde.id} element={fde} />)}\r\n                </div>\r\n                </div>\r\n                ):null}\r\n                \r\n                {property2 ?(\r\n                <div className=\"cards-slider2\">\r\n                <div className=\"cards-slider-wrapper2\" style={{\r\n                    'transform':`translateX(-${property2.id*(100/elements2.length)}%)`\r\n                }}>\r\n                {elements2.map(elements2 => <ForecastHourlyItem key={elements2.id} element={elements2} />)}\r\n                </div>\r\n                </div>\r\n                ):null}\r\n            </div>\r\n\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast"]},"metadata":{},"sourceType":"module"}