{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\Compare\\\\Compare.js\";\nimport React from 'react';\nimport Form from '../Form/Form';\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport CalCelsius from '../Functions/CalCelsius';\nimport CalWindSpeed from '../Functions/CalWindSpeed';\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem';\nimport './Compare.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key_OWM = \"157d33f8987d245bc6a1997408e90015\";\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\";\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\";\n\nclass Compare extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextCurrentProperty = () => {\n      const newIndex = this.state.currentProperty.id + 1;\n      this.setState({\n        currentProperty: this.state.compareCurrentElements[newIndex]\n      });\n      console.log(newIndex);\n    };\n\n    this.prevCurrentProperty = () => {\n      const newIndex = this.state.currentProperty.id - 1;\n      this.setState({\n        currentProperty: this.state.compareCurrentElements[newIndex]\n      });\n    };\n\n    this.getWeatherOpenweathermap = e => {\n      e.preventDefault();\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response); //this.getWeatherWeatherApi(this.state.value)\n\n        this.getWeatherTommorowIo(response.coord.lat, response.coord.lon); //this.getWeatherVisualcrossing(this.state.value)\n        //this.getWeatherWeatherbit(this.state.value)\n\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 1,\n            'date': CalDate(response.dt),\n            'weather': response.weather[0].description,\n            'temp': CalCelsius(response.main.temp),\n            'pressure': response.main.pressure,\n            'wind': CalWindSpeed(response.wind.speed),\n            'image': weatherIcons[0]\n          }]\n        });\n        this.setState({\n          currentProperty: this.state.compareCurrentElements[0]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherWeatherApi = city => {\n      fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 2,\n            'date': response.current.last_updated,\n            'weather': response.current.condition.text,\n            'temp': response.current.temp_c,\n            'pressure': response.current.pressure_mb,\n            'wind': response.current.wind_kph,\n            'image': weatherIcons[0]\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherTommorowIo = (lat, lon) => {\n      fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 3,\n            'date': response.data.timelines[0].startTime,\n            'weather': 0,\n            'temp': response.data.timelines[0].intervals[0].values.temperature,\n            'pressure': response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\n            'wind': CalWindSpeed(0),\n            'image': weatherIcons[0]\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.getWeatherVisualcrossing = city => {\n      fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 4,\n            'date': CalDate(0),\n            'weather': 0,\n            'temp': CalCelsius(0),\n            'pressure': 4,\n            'wind': CalWindSpeed(0),\n            'image': weatherIcons[0]\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherWeatherbit = city => {\n      this.state.compareCurrentElements.length = 0;\n      fetch(`https://api.weatherbit.io/v2.0/current?city=${city}&key=${API_key_w}\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 5,\n            'date': CalDate(0),\n            'weather': 0,\n            'temp': CalCelsius(0),\n            'pressure': 5,\n            'wind': CalWindSpeed(0),\n            'image': weatherIcons[0],\n            'background': \"/images/download.gif\"\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      compareCurrentElements: [],\n      currentProperty: undefined,\n      error: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"POR\\xD3WNAJ PROGNOZY\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          value: this.state.value,\n          handler: this.inputHandler,\n          submit: this.getWeatherOpenweathermap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"compare-main-cards\",\n        children: this.state.currentProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-cards-slider\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"compare-cards-slider-wrapper\",\n            style: {\n              'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\n            },\n            children: this.state.compareCurrentElements.map(fde => /*#__PURE__*/_jsxDEV(CompareCurrentWeatherItem, {\n              element: fde\n            }, fde.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 75\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst weatherIcons = {\n  200: '/images/thunderstorm.png',\n  201: '/images/thunderstorm.png',\n  202: '/images/thunderstorm.png',\n  210: '/images/thunderstorm.png',\n  211: '/images/thunderstorm.png',\n  212: '/images/thunderstorm.png',\n  221: '/images/thunderstorm.png',\n  230: '/images/thunderstorm.png',\n  231: '/images/thunderstorm.png',\n  232: '/images/thunderstorm.png',\n  300: '/images/drizzle.png',\n  301: '/images/drizzle.png',\n  302: '/images/drizzle.png',\n  310: '/images/drizzle.png',\n  311: '/images/drizzle.png',\n  312: '/images/drizzle.png',\n  313: '/images/drizzle.png',\n  314: '/images/drizzle.png',\n  321: '/images/drizzle.png',\n  500: '/images/rain.png',\n  501: '/images/rain.png',\n  503: '/images/rain.png',\n  504: '/images/rain.png',\n  511: '/images/rain.png',\n  520: '/images/rain.png',\n  521: '/images/rain.png',\n  522: '/images/rain.png',\n  531: '/images/rain.png',\n  500: '/images/rain.png',\n  600: '/images/snow.png',\n  601: '/images/snow.png',\n  602: '/images/snow.png',\n  611: '/images/snow.png',\n  612: '/images/snow.png',\n  613: '/images/snow.png',\n  615: '/images/snow.png',\n  616: '/images/snow.png',\n  620: '/images/snow.png',\n  621: '/images/snow.png',\n  622: '/images/snow.png',\n  701: '/images/mist.png',\n  711: '/images/mist.png',\n  721: '/images/mist.png',\n  731: '/images/mist.png',\n  741: '/images/mist.png',\n  751: '/images/mist.png',\n  761: '/images/mist.png',\n  762: '/images/mist.png',\n  771: '/images/mist.png',\n  781: '/images/mist.png',\n  800: '/images/clear.png',\n  801: '/images/clouds.png',\n  802: '/images/clouds.png',\n  803: '/images/clouds.png',\n  804: '/images/clouds.png'\n};\nexport default Compare;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/Compare/Compare.js"],"names":["React","Form","CalDate","CalTime","CalCelsius","CalWindSpeed","CompareCurrentWeatherItem","API_key_OWM","API_key_WA","API_key_w","Compare","Component","constructor","props","nextCurrentProperty","newIndex","state","currentProperty","id","setState","compareCurrentElements","console","log","prevCurrentProperty","getWeatherOpenweathermap","e","preventDefault","fetch","value","then","response","ok","Error","json","getWeatherTommorowIo","coord","lat","lon","dt","weather","description","main","temp","pressure","wind","speed","weatherIcons","catch","err","prevState","error","city","getWeatherWeatherApi","current","last_updated","condition","text","temp_c","pressure_mb","wind_kph","data","timelines","startTime","intervals","values","temperature","pressureSurfaceLevel","inputHandler","target","getWeatherVisualcrossing","getWeatherWeatherbit","length","undefined","render","map","fde"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem'\r\nimport './Compare.css';\r\n\r\nconst API_key_OWM=\"157d33f8987d245bc6a1997408e90015\"\r\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\"\r\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\"\r\nclass Compare extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            value:\"\",\r\n            compareCurrentElements:[\r\n            ],\r\n            currentProperty:undefined,\r\n            error:false\r\n        }\r\n    }\r\n    nextCurrentProperty = () => {\r\n        const newIndex = this.state.currentProperty.id +1\r\n        this.setState({\r\n            currentProperty: this.state.compareCurrentElements[newIndex]\r\n        })\r\n        console.log(newIndex)\r\n    }\r\n\r\n    prevCurrentProperty = () => {\r\n        const newIndex = this.state.currentProperty.id -1\r\n        this.setState({\r\n            currentProperty: this.state.compareCurrentElements[newIndex]\r\n        })\r\n    }\r\n\r\n    getWeatherOpenweathermap = (e) =>{\r\n        e.preventDefault()\r\n            \r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            //this.getWeatherWeatherApi(this.state.value)\r\n            this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\r\n            //this.getWeatherVisualcrossing(this.state.value)\r\n            //this.getWeatherWeatherbit(this.state.value)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':1,\r\n                    'date':CalDate(response.dt),\r\n                    'weather':response.weather[0].description,\r\n                    'temp':CalCelsius(response.main.temp),\r\n                    'pressure':response.main.pressure,\r\n                    'wind':CalWindSpeed(response.wind.speed),\r\n                    'image':weatherIcons[0],\r\n                }],\r\n            })\r\n            this.setState({\r\n                currentProperty:this.state.compareCurrentElements[0]\r\n            }) \r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    getWeatherWeatherApi = (city) =>{\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':2,\r\n                    'date':response.current.last_updated,\r\n                    'weather':response.current.condition.text,\r\n                    'temp':response.current.temp_c,\r\n                    'pressure':response.current.pressure_mb,\r\n                    'wind':response.current.wind_kph,\r\n                    'image':weatherIcons[0],\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    getWeatherTommorowIo = (lat,lon) =>{\r\n            \r\n        fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':3,\r\n                    'date':response.data.timelines[0].startTime,\r\n                    'weather':0,\r\n                    'temp':response.data.timelines[0].intervals[0].values.temperature,\r\n                    'pressure':response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\r\n                    'wind':CalWindSpeed(0),\r\n                    'image':weatherIcons[0],\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    inputHandler=(e)=>{\r\n        this.setState({\r\n            value:e.target.value\r\n        })\r\n    }\r\n    getWeatherVisualcrossing = (city) =>{\r\n            \r\n        fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':4,\r\n                    'date':CalDate(0),\r\n                    'weather':0,\r\n                    'temp':CalCelsius(0),\r\n                    'pressure':4,\r\n                    'wind':CalWindSpeed(0),\r\n                    'image':weatherIcons[0],\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    } \r\n    getWeatherWeatherbit = (city) =>{\r\n\r\n        this.state.compareCurrentElements.length=0\r\n            \r\n        fetch(`https://api.weatherbit.io/v2.0/current?city=${city}&key=${API_key_w}\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':5,\r\n                    'date':CalDate(0),\r\n                    'weather':0,\r\n                    'temp':CalCelsius(0),\r\n                    'pressure':5,\r\n                    'wind':CalWindSpeed(0),\r\n                    'image':weatherIcons[0],\r\n                    'background':\"/images/download.gif\",\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }  \r\n    render(){\r\n        return(\r\n            <div>\r\n                PORÓWNAJ PROGNOZY\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeatherOpenweathermap}\r\n                /> \r\n                </div>\r\n                <div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ?( \r\n                    <div className=\"compare-cards-slider\">\r\n                        <div className=\"compare-cards-slider-wrapper\" style={{\r\n                            'transform':`translateX(-${this.state.currentProperty.id*(100/this.state.compareCurrentElements.length)}%)`\r\n                        }}>\r\n                            {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem key={fde.id} element={fde} />)}\r\n                        </div>\r\n                    </div>\r\n                    ):null}\r\n                </div>\r\n            </div>\r\n\r\n        \r\n        )\r\n    }\r\n}\r\nconst weatherIcons = {\r\n    200:'/images/thunderstorm.png',\r\n    201:'/images/thunderstorm.png',\r\n    202:'/images/thunderstorm.png',\r\n    210:'/images/thunderstorm.png',\r\n    211:'/images/thunderstorm.png',\r\n    212:'/images/thunderstorm.png',\r\n    221:'/images/thunderstorm.png',\r\n    230:'/images/thunderstorm.png',\r\n    231:'/images/thunderstorm.png',\r\n    232:'/images/thunderstorm.png',\r\n    300:'/images/drizzle.png',\r\n    301:'/images/drizzle.png',\r\n    302:'/images/drizzle.png',\r\n    310:'/images/drizzle.png',\r\n    311:'/images/drizzle.png',\r\n    312:'/images/drizzle.png',\r\n    313:'/images/drizzle.png',\r\n    314:'/images/drizzle.png',\r\n    321:'/images/drizzle.png',\r\n    500:'/images/rain.png',\r\n    501:'/images/rain.png',\r\n    503:'/images/rain.png',\r\n    504:'/images/rain.png',\r\n    511:'/images/rain.png',\r\n    520:'/images/rain.png',\r\n    521:'/images/rain.png',\r\n    522:'/images/rain.png',\r\n    531:'/images/rain.png',\r\n    500:'/images/rain.png',\r\n    600:'/images/snow.png',\r\n    601:'/images/snow.png',\r\n    602:'/images/snow.png',\r\n    611:'/images/snow.png',\r\n    612:'/images/snow.png',\r\n    613:'/images/snow.png',\r\n    615:'/images/snow.png',\r\n    616:'/images/snow.png',\r\n    620:'/images/snow.png',\r\n    621:'/images/snow.png',\r\n    622:'/images/snow.png',\r\n    701:'/images/mist.png',\r\n    711:'/images/mist.png',\r\n    721:'/images/mist.png',\r\n    731:'/images/mist.png',\r\n    741:'/images/mist.png',\r\n    751:'/images/mist.png',\r\n    761:'/images/mist.png',\r\n    762:'/images/mist.png',\r\n    771:'/images/mist.png',\r\n    781:'/images/mist.png',\r\n    800:'/images/clear.png',\r\n    801:'/images/clouds.png',\r\n    802:'/images/clouds.png',\r\n    803:'/images/clouds.png',\r\n    804:'/images/clouds.png',\r\n}\r\nexport default Compare"]},"metadata":{},"sourceType":"module"}