{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\UserPanel\\\\UserPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './UserPanel.css';\nimport Axios from 'axios';\nimport UserWeatherItem from './UserWeatherItem';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPanel() {\n  _s();\n\n  const [cityName, setCityName] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [weatherState, setWeatherState] = useState('');\n  const [temp, setTemp] = useState('');\n  const [clouds, setClouds] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [pressure, setPressure] = useState('');\n  const [wind, setWind] = useState('');\n  const [aqi, setAqi] = useState('');\n  const [cityWeatherList, setcityWeatherList] = useState([]);\n  const [property, setProperty] = useState([]);\n  const [loginStatus, setLoginStatus] = useState('');\n  console.log(loginStatus);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/login').then(response => {\n      if (response.data.loggedIn == true) {\n        setLoginStatus(response.data.user[0].username);\n        console.log(response);\n      } else {\n        setLoginStatus(\"unlogged\");\n      }\n    });\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setcityWeatherList(response.data);\n      setProperty(response.data[1]);\n    });\n  }, []);\n\n  const submitWeather = () => {\n    Axios.post('http://localhost:3001/api/insert', {\n      cityName: cityName,\n      date: date,\n      time: time,\n      weatherState: weatherState,\n      temp: temp,\n      clouds: clouds,\n      humidity: humidity,\n      pressure: pressure,\n      wind: wind,\n      aqi: aqi\n    });\n    setcityWeatherList([...cityWeatherList, {\n      cityName: cityName,\n      date: date,\n      time: time,\n      weatherState: weatherState,\n      temp: temp,\n      clouds: clouds,\n      humidity: humidity,\n      pressure: pressure,\n      wind: wind,\n      aqi: aqi\n    }]);\n  };\n\n  const nextProperty = () => {\n    const newIndex = property.id;\n    setProperty(cityWeatherList[newIndex]);\n    console.log(newIndex);\n    console.log(property);\n  };\n\n  const prevProperty = () => {\n    const newIndex = property.id - 2;\n    setProperty(cityWeatherList[newIndex]);\n  };\n\n  if (loginStatus == \"unlogged\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      style: {\n        backgroundImage: `url(\"/images/bg_signUp.jpg\")`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Miejsce\",\n            required: true,\n            onChange: e => {\n              setCityName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Data\",\n            required: true,\n            onChange: e => {\n              setDate(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Godzina\",\n            required: true,\n            onChange: e => {\n              setTime(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Pogoda\",\n            required: true,\n            onChange: e => {\n              setWeatherState(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Temperatura (\\xB0C)\",\n            required: true,\n            onChange: e => {\n              setTemp(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Zachmurzenie (%)\",\n            required: true,\n            onChange: e => {\n              setClouds(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Wilgotno\\u015B\\u0107\",\n            required: true,\n            onChange: e => {\n              setHumidity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Ci\\u015Bnienie (hPa)\",\n            required: true,\n            onChange: e => {\n              setPressure(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Wiatr (km/h)\",\n            required: true,\n            onChange: e => {\n              setWind(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Jako\\u015B\\u0107 powietrza (1-5)\",\n            required: true,\n            onChange: e => {\n              setAqi(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-btn\",\n            onClick: submitWeather,\n            children: \"Dodaj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-main\",\n        children: property ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"left\",\n            onClick: () => nextProperty(),\n            disabled: property.id === cityWeatherList.length,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"right\",\n            onClick: () => prevProperty(),\n            disabled: property.id === 2,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-cards\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userCards-slider\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"userCards-slider-wrapper\",\n                style: {\n                  'transform': `translateX(-${property.id * (100 / cityWeatherList.length - 3)}%)`\n                },\n                children: cityWeatherList.map(fde => /*#__PURE__*/_jsxDEV(UserWeatherItem, {\n                  element: fde\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 65\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      style: {\n        backgroundImage: `url(\"/images/bg_signUp.jpg\")`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Musisz by\\u0107 zalogowanym aby korzysta\\u0107 z tej funkcji.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-btn\",\n              children: \"Zaloguj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(UserPanel, \"xb0YfBbJSsw1YnKLtyaH340nxig=\");\n\n_c = UserPanel;\nexport default UserPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPanel\");","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/UserPanel/UserPanel.js"],"names":["React","useState","useEffect","Axios","UserWeatherItem","Link","UserPanel","cityName","setCityName","date","setDate","time","setTime","weatherState","setWeatherState","temp","setTemp","clouds","setClouds","humidity","setHumidity","pressure","setPressure","wind","setWind","aqi","setAqi","cityWeatherList","setcityWeatherList","property","setProperty","loginStatus","setLoginStatus","console","log","get","then","response","data","loggedIn","user","username","submitWeather","post","nextProperty","newIndex","id","prevProperty","backgroundImage","e","target","value","length","map","fde"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './UserPanel.css';\nimport Axios from 'axios'\nimport UserWeatherItem from './UserWeatherItem';\nimport {Link} from 'react-router-dom'\n\nfunction UserPanel(){\n\n    const [cityName, setCityName] = useState('')\n    const [date, setDate] = useState('')\n    const [time, setTime] = useState('')\n    const [weatherState, setWeatherState] = useState('')\n    const [temp, setTemp] = useState('')\n    const [clouds, setClouds] = useState('')\n    const [humidity, setHumidity] = useState('')\n    const [pressure, setPressure] = useState('')\n    const [wind, setWind] = useState('')\n    const [aqi, setAqi] = useState('')\n\n\n    const [cityWeatherList, setcityWeatherList] = useState([])\n    const [property, setProperty] = useState([])\n\n    const [loginStatus, setLoginStatus] = useState('')\n    console.log(loginStatus)\n\n   \n    useEffect(()=>{\n        Axios.get('http://localhost:3001/api/login').then((response)=>{\n            if(response.data.loggedIn==true){\n                setLoginStatus(response.data.user[0].username)\n                console.log(response)\n            }else{\n                setLoginStatus(\"unlogged\")\n            }\n        })\n        Axios.get('http://localhost:3001/api/get')\n        .then((response)=>{\n            setcityWeatherList(response.data)\n            setProperty(response.data[1])\n        })\n    },[])\n    const submitWeather = () =>{\n\n        Axios.post('http://localhost:3001/api/insert',{\n            cityName:cityName,\n            date:date,\n            time:time,\n            weatherState:weatherState,\n            temp:temp,\n            clouds:clouds,\n            humidity:humidity,\n            pressure:pressure,\n            wind:wind,\n            aqi:aqi\n        })\n        setcityWeatherList([...cityWeatherList,{\n            cityName:cityName,\n            date:date,\n            time:time,\n            weatherState:weatherState,\n            temp:temp,\n            clouds:clouds,\n            humidity:humidity,\n            pressure:pressure,\n            wind:wind,\n            aqi:aqi\n        },])\n    }\n    const nextProperty = () => {\n        const newIndex = property.id\n\n        setProperty(cityWeatherList[newIndex])\n        console.log(newIndex)\n        console.log(property)\n    }\n    \n    const prevProperty = () => {\n        const newIndex = property.id-2\n        setProperty(cityWeatherList[newIndex])\n    }\n    if(loginStatus==\"unlogged\"){\n        return(\n            <div className=\"hero\" style={{ \n                backgroundImage: `url(\"/images/bg_signUp.jpg\")` \n            }}>\n                <div className=\"form-box\">\n                    <div className=\"login-input-group\">\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Miejsce\" required \n                        \n                        onChange={(e)=>{\n                            setCityName(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Data\" required \n                        \n                        onChange={(e)=>{\n                            setDate(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Godzina\" required \n                        \n                        onChange={(e)=>{\n                            setTime(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Pogoda\" required \n                        \n                        onChange={(e)=>{\n                            setWeatherState(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Temperatura (°C)\" required \n                        \n                        onChange={(e)=>{\n                            setTemp(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Zachmurzenie (%)\" required \n                        \n                        onChange={(e)=>{\n                            setClouds(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Wilgotność\" required \n                        \n                        onChange={(e)=>{\n                            setHumidity(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Ciśnienie (hPa)\" required \n                        \n                        onChange={(e)=>{\n                            setPressure(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Wiatr (km/h)\" required \n                        \n                        onChange={(e)=>{\n                            setWind(e.target.value)\n                        }}/>\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Jakość powietrza (1-5)\" required \n                        \n                        onChange={(e)=>{\n                            setAqi(e.target.value)\n                        }}/>\n                        <button type=\"submit\" className=\"submit-btn\" onClick={submitWeather}>Dodaj</button>\n                    </div>\n                </div>   \n\n                <div className=\"user-main\">\n                {property ?(\n                    <div className=\"user-cards\">\n                        <button className=\"left\" \n                            onClick={() => nextProperty()} \n                            disabled={property.id === cityWeatherList.length}\n                        >Next\n                        </button>\n                        <button className=\"right\"\n                            onClick={() => prevProperty()} \n                            disabled={property.id === 2}\n                        >Prev\n                        </button>\n                        <div className=\"main-cards\">\n                            <div className=\"userCards-slider\">\n                                <div className=\"userCards-slider-wrapper\" style={{\n                                                                          'transform':`translateX(-${property.id*(100/cityWeatherList.length-3)}%)`\n                                }}>\n                                    {cityWeatherList.map(fde => <UserWeatherItem element={fde} />)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ):null}\n                </div> \n            </div>\n        )\n    }else{\n        return(\n            <div className=\"hero\" style={{ \n                backgroundImage: `url(\"/images/bg_signUp.jpg\")` \n            }}>\n                <div className=\"form-box\">\n                    <div className=\"login-input-group\" >\n                        <h1>Musisz być zalogowanym aby korzystać z tej funkcji.</h1>\n                        <Link to='/sign-up'><button type=\"submit\" className=\"submit-btn\" >Zaloguj</button></Link>\n                    </div>\n                </div>   \n            </div>\n        )\n    }\n}\nexport default UserPanel"]},"metadata":{},"sourceType":"module"}