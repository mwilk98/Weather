{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\AirCondition\\\\AirCondition.js\";\nimport React from 'react';\nimport Form from '../Form/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"157d33f8987d245bc6a1997408e90015\";\n\nclass AirCondition extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      lat: \"\",\n      lon: \"\"\n    };\n\n    this.getAir = e => {\n      e.preventDefault();\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState(state => ({\n          city: state.value,\n          country: response.sys.country,\n          lat: response.coord.lat,\n          lon: response.coord.lon,\n          error: false\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n      fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${this.state.lat}&lon=${this.state.lon}&appid=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState(state => ({\n          city: state.value,\n          country: response.sys.country,\n          lat: response.coord.lat,\n          lon: response.coord.lon,\n          error: false\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      this.getWeather(e);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stan Powietrza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          value: this.state.value,\n          handler: this.inputHandler,\n          submit: this.submitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AirCondition;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/AirCondition/AirCondition.js"],"names":["React","Form","API_key","AirCondition","Component","state","value","lat","lon","getAir","e","preventDefault","fetch","then","response","ok","Error","json","console","log","setState","city","country","sys","coord","error","catch","err","prevState","inputHandler","target","submitHandler","getWeather","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Form from '../Form/Form'\r\n\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\n\r\n\r\nclass AirCondition extends React.Component{\r\n    state={\r\n        value:\"\",\r\n        lat:\"\",\r\n        lon:\"\"\r\n    }\r\n    getAir = (e) =>{\r\n        \r\n        e.preventDefault()\r\n          \r\n          fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              console.log(response)\r\n              this.setState(state =>({\r\n                city:state.value,\r\n                country:response.sys.country,\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon, \r\n                error:false\r\n              }))\r\n          })\r\n          .catch(err =>{\r\n            console.log(err)\r\n            this.setState(prevState =>{\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n        fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${this.state.lat}&lon=${this.state.lon}&appid=${API_key}`)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState(state =>({\r\n              city:state.value,\r\n              country:response.sys.country,\r\n              lat:response.coord.lat,\r\n              lon:response.coord.lon, \r\n              error:false\r\n            }))\r\n        })\r\n        .catch(err =>{\r\n          console.log(err)\r\n          this.setState(prevState =>{\r\n              return{\r\n              error:true,\r\n              city:prevState.city\r\n          }})\r\n      })\r\n    }\r\n    inputHandler=(e)=>{\r\n        this.setState({\r\n            value:e.target.value\r\n        })\r\n    }\r\n    submitHandler=(e)=>{\r\n        this.getWeather(e)\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div >\r\n                <h1>Stan Powietrza</h1>\r\n                <div>\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.submitHandler}\r\n                /> \r\n                </div>   \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default AirCondition"]},"metadata":{},"sourceType":"module"}