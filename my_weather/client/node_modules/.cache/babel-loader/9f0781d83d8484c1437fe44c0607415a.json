{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\currentWeather\\\\CurrentWeather.js\";\nimport React from 'react';\nimport WeatherItem from './WeatherItem';\nimport Forecast from '../forecast/Forecast';\nimport Form from '../Form/Form';\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport CalCelsius from '../Functions/CalCelsius';\nimport CalWindSpeed from '../Functions/CalWindSpeed';\nimport './CurrentWeather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"157d33f8987d245bc6a1997408e90015\";\n\nclass CurrentWeather extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      city: \"\",\n      country: \"\",\n      image: undefined,\n      weather: undefined,\n      temp: undefined,\n      tempMax: undefined,\n      tempMin: undefined,\n      pressurre: undefined,\n      wind: undefined,\n      lat: undefined,\n      lon: undefined,\n      error: false\n    };\n\n    this.getWeather = e => {\n      e.preventDefault();\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n        this.setState(state => ({\n          city: state.value,\n          country: response.sys.country,\n          date: CalDate(response.dt),\n          time: CalTime(response.dt, response.timezone),\n          weather: response.weather[0].description,\n          temp: CalCelsius(response.main.temp),\n          tempMax: CalCelsius(response.main.temp_max),\n          tempMin: CalCelsius(response.main.temp_min),\n          pressure: response.main.pressure,\n          wind: CalWindSpeed(response.wind.speed),\n          lat: response.coord.lat,\n          lon: response.coord.lon,\n          error: false\n        }));\n\n        if (response.weather[0].id >= 200 && response.weather[0].id <= 232) {\n          this.setState({\n            image: weatherIcons[200]\n          });\n        }\n\n        if (response.weather[0].id >= 300 && response.weather[0].id <= 321) {\n          this.setState({\n            image: weatherIcons[300]\n          });\n        }\n\n        if (response.weather[0].id >= 500 && response.weather[0].id <= 531) {\n          this.setState({\n            image: weatherIcons[500]\n          });\n        }\n\n        if (response.weather[0].id >= 600 && response.weather[0].id <= 622) {\n          this.setState({\n            image: weatherIcons[600]\n          });\n        }\n\n        if (response.weather[0].id >= 700 && response.weather[0].id <= 781) {\n          this.setState({\n            image: weatherIcons[700]\n          });\n        }\n\n        if (response.weather[0].id == 800) {\n          this.setState({\n            image: weatherIcons[800]\n          });\n        }\n\n        if (response.weather[0].id >= 800 && response.weather[0].id <= 804) {\n          this.setState({\n            image: weatherIcons[801]\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      this.getWeather(e);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          value: this.state.value,\n          handler: this.inputHandler,\n          submit: this.getWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.city ? /*#__PURE__*/_jsxDEV(WeatherItem, {\n          weather: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.city ? /*#__PURE__*/_jsxDEV(Forecast, {\n          lat: this.state.lat,\n          lon: this.state.lon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst weatherIcons = {\n  200: '/images/thunderstorm.png',\n  201: '/images/thunderstorm.png',\n  202: '/images/thunderstorm.png',\n  210: '/images/thunderstorm.png',\n  211: '/images/thunderstorm.png',\n  212: '/images/thunderstorm.png',\n  221: '/images/thunderstorm.png',\n  230: '/images/thunderstorm.png',\n  231: '/images/thunderstorm.png',\n  232: '/images/thunderstorm.png',\n  300: '/images/drizzle.png',\n  301: '/images/drizzle.png',\n  302: '/images/drizzle.png',\n  310: '/images/drizzle.png',\n  311: '/images/drizzle.png',\n  312: '/images/drizzle.png',\n  313: '/images/drizzle.png',\n  314: '/images/drizzle.png',\n  321: '/images/drizzle.png',\n  500: '/images/rain.png',\n  501: '/images/rain.png',\n  503: '/images/rain.png',\n  504: '/images/rain.png',\n  511: '/images/rain.png',\n  520: '/images/rain.png',\n  521: '/images/rain.png',\n  522: '/images/rain.png',\n  531: '/images/rain.png',\n  500: '/images/rain.png',\n  600: '/images/snow.png',\n  601: '/images/snow.png',\n  602: '/images/snow.png',\n  611: '/images/snow.png',\n  612: '/images/snow.png',\n  613: '/images/snow.png',\n  615: '/images/snow.png',\n  616: '/images/snow.png',\n  620: '/images/snow.png',\n  621: '/images/snow.png',\n  622: '/images/snow.png',\n  701: '/images/mist.png',\n  711: '/images/mist.png',\n  721: '/images/mist.png',\n  731: '/images/mist.png',\n  741: '/images/mist.png',\n  751: '/images/mist.png',\n  761: '/images/mist.png',\n  762: '/images/mist.png',\n  771: '/images/mist.png',\n  781: '/images/mist.png',\n  800: '/images/clear.png',\n  801: '/images/clouds.png',\n  802: '/images/clouds.png',\n  803: '/images/clouds.png',\n  804: '/images/clouds.png'\n};\nexport default CurrentWeather;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/currentWeather/CurrentWeather.js"],"names":["React","WeatherItem","Forecast","Form","CalDate","CalTime","CalCelsius","CalWindSpeed","API_key","CurrentWeather","Component","state","value","city","country","image","undefined","weather","temp","tempMax","tempMin","pressurre","wind","lat","lon","error","getWeather","e","preventDefault","fetch","then","response","ok","Error","json","localTime","Date","toLocaleString","console","log","setState","sys","date","dt","time","timezone","description","main","temp_max","temp_min","pressure","speed","coord","id","weatherIcons","catch","err","prevState","inputHandler","target","submitHandler","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport WeatherItem from './WeatherItem';\r\nimport Forecast from '../forecast/Forecast'\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport './CurrentWeather.css';\r\n\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\n\r\nclass CurrentWeather extends React.Component{\r\n    \r\n    state={\r\n        value:\"\",\r\n        city:\"\",\r\n        country:\"\",\r\n        image:undefined,\r\n        weather:undefined,\r\n        temp:undefined,\r\n        tempMax:undefined,\r\n        tempMin:undefined,\r\n        pressurre:undefined,\r\n        wind:undefined,\r\n        lat:undefined,\r\n        lon:undefined,\r\n        error:false\r\n    }\r\n    \r\n    getWeather = (e) =>{\r\n        \r\n        e.preventDefault()\r\n          \r\n          fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              const localTime = new Date().toLocaleString()\r\n              console.log(response)\r\n              this.setState(state =>({\r\n                city:state.value,\r\n                country:response.sys.country,\r\n                date:CalDate(response.dt),\r\n                time:CalTime(response.dt,response.timezone),\r\n                weather:response.weather[0].description,\r\n                temp:CalCelsius(response.main.temp),\r\n                tempMax:CalCelsius(response.main.temp_max),\r\n                tempMin:CalCelsius(response.main.temp_min),\r\n                pressure:response.main.pressure,\r\n                wind:CalWindSpeed(response.wind.speed),\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon, \r\n                error:false\r\n              }))\r\n              if(response.weather[0].id >=200 && response.weather[0].id <=232){\r\n                  this.setState({\r\n                      image:weatherIcons[200]\r\n                  })\r\n              }\r\n              if(response.weather[0].id >=300 && response.weather[0].id <=321){\r\n                this.setState({\r\n                    image:weatherIcons[300]\r\n                })\r\n              }\r\n              if(response.weather[0].id >=500 && response.weather[0].id <=531){\r\n                this.setState({\r\n                    image:weatherIcons[500]\r\n                })\r\n              }\r\n              if(response.weather[0].id >=600 && response.weather[0].id <=622){\r\n                this.setState({\r\n                    image:weatherIcons[600]\r\n                })\r\n              }\r\n              if(response.weather[0].id >=700 && response.weather[0].id <=781){\r\n                this.setState({\r\n                    image:weatherIcons[700]\r\n                })\r\n              }\r\n              if(response.weather[0].id ==800){\r\n                this.setState({\r\n                    image:weatherIcons[800]\r\n                })\r\n              }\r\n              if(response.weather[0].id >=800 && response.weather[0].id <=804){\r\n                this.setState({\r\n                    image:weatherIcons[801]\r\n                })\r\n              }\r\n          })\r\n          .catch(err =>{\r\n            console.log(err)\r\n            this.setState(prevState =>{\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n       \r\n    }\r\n    inputHandler=(e)=>{\r\n        this.setState({\r\n            value:e.target.value\r\n        })\r\n    }\r\n    submitHandler=(e)=>{\r\n        this.getWeather(e)\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeather}\r\n                /> \r\n                </div> \r\n                <div>\r\n                {this.state.city ?(\r\n                    <WeatherItem weather={this.state}/>   \r\n                ):null}\r\n                </div>\r\n                <div>\r\n                {this.state.city ?(\r\n                    <Forecast lat={this.state.lat} lon={this.state.lon}/>   \r\n                ):null}\r\n                 \r\n                </div>   \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst weatherIcons = {\r\n    200:'/images/thunderstorm.png',\r\n    201:'/images/thunderstorm.png',\r\n    202:'/images/thunderstorm.png',\r\n    210:'/images/thunderstorm.png',\r\n    211:'/images/thunderstorm.png',\r\n    212:'/images/thunderstorm.png',\r\n    221:'/images/thunderstorm.png',\r\n    230:'/images/thunderstorm.png',\r\n    231:'/images/thunderstorm.png',\r\n    232:'/images/thunderstorm.png',\r\n    300:'/images/drizzle.png',\r\n    301:'/images/drizzle.png',\r\n    302:'/images/drizzle.png',\r\n    310:'/images/drizzle.png',\r\n    311:'/images/drizzle.png',\r\n    312:'/images/drizzle.png',\r\n    313:'/images/drizzle.png',\r\n    314:'/images/drizzle.png',\r\n    321:'/images/drizzle.png',\r\n    500:'/images/rain.png',\r\n    501:'/images/rain.png',\r\n    503:'/images/rain.png',\r\n    504:'/images/rain.png',\r\n    511:'/images/rain.png',\r\n    520:'/images/rain.png',\r\n    521:'/images/rain.png',\r\n    522:'/images/rain.png',\r\n    531:'/images/rain.png',\r\n    500:'/images/rain.png',\r\n    600:'/images/snow.png',\r\n    601:'/images/snow.png',\r\n    602:'/images/snow.png',\r\n    611:'/images/snow.png',\r\n    612:'/images/snow.png',\r\n    613:'/images/snow.png',\r\n    615:'/images/snow.png',\r\n    616:'/images/snow.png',\r\n    620:'/images/snow.png',\r\n    621:'/images/snow.png',\r\n    622:'/images/snow.png',\r\n    701:'/images/mist.png',\r\n    711:'/images/mist.png',\r\n    721:'/images/mist.png',\r\n    731:'/images/mist.png',\r\n    741:'/images/mist.png',\r\n    751:'/images/mist.png',\r\n    761:'/images/mist.png',\r\n    762:'/images/mist.png',\r\n    771:'/images/mist.png',\r\n    781:'/images/mist.png',\r\n    800:'/images/clear.png',\r\n    801:'/images/clouds.png',\r\n    802:'/images/clouds.png',\r\n    803:'/images/clouds.png',\r\n    804:'/images/clouds.png',\r\n}\r\nexport default CurrentWeather"]},"metadata":{},"sourceType":"module"}