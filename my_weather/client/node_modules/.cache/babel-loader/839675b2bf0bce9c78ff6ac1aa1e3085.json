{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\forecast\\\\Forecast.js\";\nimport React from 'react';\nimport ForecastDailyItem from './ForecastDailyItem';\nimport ForecastHourlyItem from './ForecastHourlyItem';\nimport CurrentWeather from '../currentWeather/CurrentWeather';\nimport './Forecast.css';\nimport CalDate from '../Functions/CalDate';\nimport CalCelsius from '../Functions/CalCelsius';\nimport CalWindSpeed from '../Functions/CalWindSpeed';\nimport CalTime from '../Functions/CalTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"157d33f8987d245bc6a1997408e90015\";\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    const {\n      lat: _lat,\n      lon: _lon,\n      error\n    } = props.weather;\n    super(props);\n\n    this.nextdailyProperty = () => {\n      const newIndex = this.state.dailyProperty.id + 1;\n      this.setState({\n        dailyProperty: this.state.forecastDailyElements[newIndex]\n      });\n    };\n\n    this.prevdailyProperty = () => {\n      const newIndex = this.state.dailyProperty.id - 1;\n      this.setState({\n        dailyProperty: this.state.forecastDailyElements[newIndex]\n      });\n    };\n\n    this.nexthourlyProperty = () => {\n      const newIndex = this.state.hourlyProperty.id + 1;\n      this.setState({\n        hourlyProperty: this.state.forecastHourlyElements[newIndex]\n      });\n    };\n\n    this.prevhourlyProperty = () => {\n      const newIndex = this.state.hourlyProperty.id - 1;\n      this.setState({\n        hourlyProperty: this.state.forecastHourlyElements[newIndex]\n      });\n    };\n\n    this.getForecastDaily = props => {\n      this.state.forecastDailyElements.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElements: [...this.state.forecastDailyElements, {\n              'id': i,\n              'date': CalDate(response.daily[i].dt),\n              'weather': response.daily[i].weather[0].description,\n              'temp': CalCelsius(response.daily[i].temp.day),\n              'pressure': response.daily[i].pressure,\n              'wind': CalWindSpeed(response.daily[i].wind_speed),\n              'image': weatherIcons[response.daily[i].weather[0].id]\n            }],\n            dailyProperty: this.state.forecastDailyElements[0]\n          });\n          console.log(response.daily[i].weather[0].id);\n        }\n      });\n      console.log(this.dailyProperty);\n    };\n\n    this.getForecastHourly = props => {\n      this.state.forecastHourlyElements.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n\n        for (var i = 0; i < 48; i++) {\n          this.setState({\n            forecastHourlyElements: [...this.state.forecastHourlyElements, {\n              'id': i,\n              'date': CalDate(response.hourly[i].dt),\n              'time': CalTime(response.hourly[i].dt, response.timezone_offset),\n              'weather': response.hourly[i].weather[0].description,\n              'temp': CalCelsius(response.hourly[i].temp),\n              'pressure': response.hourly[i].pressure,\n              'wind': CalWindSpeed(response.hourly[i].wind_speed),\n              'image': weatherIcons[response.hourly[i].weather[0].id]\n            }],\n            hourlyProperty: this.state.forecastHourlyElements[0]\n          });\n        }\n      });\n    };\n\n    this.state = {\n      forecastDailyElements: [],\n      forecastHourlyElements: [],\n      dailyProperty: undefined,\n      hourlyProperty: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.getForecastDaily();\n    this.getForecastHourly();\n  }\n\n  render() {\n    const {\n      forecastDailyElements,\n      forecastHourlyElements,\n      dailyProperty,\n      hourlyProperty\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getForecastDaily.bind(this),\n        children: \"Refresh Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getForecastHourly.bind(this),\n        children: \"Refresh Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), dailyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.nextdailyProperty(),\n        disabled: dailyProperty.id === forecastDailyElements.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this) : null, dailyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.prevdailyProperty(),\n        disabled: dailyProperty.id === 0,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this) : null, hourlyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.nexthourlyProperty(),\n        disabled: hourlyProperty.id === forecastHourlyElements.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this) : null, hourlyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.prevhourlyProperty(),\n        disabled: hourlyProperty.id === 0,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this) : null, dailyProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-slider\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-slider-wrapper\",\n          style: {\n            'transform': `translateX(-${dailyProperty.id * (100 / forecastDailyElements.length)}%)`\n          },\n          children: forecastDailyElements.map(fde => /*#__PURE__*/_jsxDEV(ForecastDailyItem, {\n            element: fde\n          }, fde.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 51\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this) : null, hourlyProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-slider2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-slider-wrapper2\",\n          style: {\n            'transform': `translateX(-${hourlyProperty.id * (100 / forecastHourlyElements.length)}%)`\n          },\n          children: forecastHourlyElements.map(fhe => /*#__PURE__*/_jsxDEV(ForecastHourlyItem, {\n            element: fhe\n          }, fhe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst weatherIcons = {\n  200: '/images/thunderstorm.png',\n  201: '/images/thunderstorm.png',\n  202: '/images/thunderstorm.png',\n  210: '/images/thunderstorm.png',\n  211: '/images/thunderstorm.png',\n  212: '/images/thunderstorm.png',\n  221: '/images/thunderstorm.png',\n  230: '/images/thunderstorm.png',\n  231: '/images/thunderstorm.png',\n  232: '/images/thunderstorm.png',\n  300: '/images/drizzle.png',\n  301: '/images/drizzle.png',\n  302: '/images/drizzle.png',\n  310: '/images/drizzle.png',\n  311: '/images/drizzle.png',\n  312: '/images/drizzle.png',\n  313: '/images/drizzle.png',\n  314: '/images/drizzle.png',\n  321: '/images/drizzle.png',\n  500: '/images/rain.png',\n  501: '/images/rain.png',\n  503: '/images/rain.png',\n  504: '/images/rain.png',\n  511: '/images/rain.png',\n  520: '/images/rain.png',\n  521: '/images/rain.png',\n  522: '/images/rain.png',\n  531: '/images/rain.png',\n  500: '/images/rain.png',\n  600: '/images/snow.png',\n  601: '/images/snow.png',\n  602: '/images/snow.png',\n  611: '/images/snow.png',\n  612: '/images/snow.png',\n  613: '/images/snow.png',\n  615: '/images/snow.png',\n  616: '/images/snow.png',\n  620: '/images/snow.png',\n  621: '/images/snow.png',\n  622: '/images/snow.png',\n  701: '/images/mist.png',\n  711: '/images/mist.png',\n  721: '/images/mist.png',\n  731: '/images/mist.png',\n  741: '/images/mist.png',\n  751: '/images/mist.png',\n  761: '/images/mist.png',\n  762: '/images/mist.png',\n  771: '/images/mist.png',\n  781: '/images/mist.png',\n  800: '/images/clear.png',\n  801: '/images/clouds.png',\n  802: '/images/clouds.png',\n  803: '/images/clouds.png',\n  804: '/images/clouds.png'\n};\nexport default Forecast;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/forecast/Forecast.js"],"names":["React","ForecastDailyItem","ForecastHourlyItem","CurrentWeather","CalDate","CalCelsius","CalWindSpeed","CalTime","API_key","Forecast","Component","constructor","props","lat","lon","error","weather","nextdailyProperty","newIndex","state","dailyProperty","id","setState","forecastDailyElements","prevdailyProperty","nexthourlyProperty","hourlyProperty","forecastHourlyElements","prevhourlyProperty","getForecastDaily","length","fetch","then","response","ok","Error","json","localTime","Date","toLocaleString","console","log","i","daily","dt","description","temp","day","pressure","wind_speed","weatherIcons","getForecastHourly","hourly","timezone_offset","undefined","componentDidMount","render","bind","map","fde","fhe"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ForecastDailyItem from './ForecastDailyItem';\r\nimport ForecastHourlyItem from './ForecastHourlyItem';\r\nimport CurrentWeather from '../currentWeather/CurrentWeather'\r\nimport './Forecast.css';\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport CalTime from '../Functions/CalTime';\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\n\r\nclass Forecast extends React.Component{\r\n    constructor(props){\r\n        const{\r\n            lat,\r\n            lon,\r\n            error} = props.weather\r\n        \r\n        super(props)\r\n        this.state={\r\n            forecastDailyElements:[\r\n            ],\r\n            forecastHourlyElements:[\r\n            ],\r\n            dailyProperty: undefined,\r\n            hourlyProperty: undefined\r\n        }\r\n    }\r\n\r\n    nextdailyProperty = () => {\r\n        const newIndex = this.state.dailyProperty.id +1\r\n        this.setState({\r\n            dailyProperty: this.state.forecastDailyElements[newIndex]\r\n        })\r\n    }\r\n\r\n    prevdailyProperty = () => {\r\n        const newIndex = this.state.dailyProperty.id -1\r\n        this.setState({\r\n            dailyProperty: this.state.forecastDailyElements[newIndex]\r\n        })\r\n    }\r\n\r\n    nexthourlyProperty = () => {\r\n        const newIndex = this.state.hourlyProperty.id +1\r\n        this.setState({\r\n            hourlyProperty: this.state.forecastHourlyElements[newIndex]\r\n        })\r\n    }\r\n    \r\n    prevhourlyProperty = () => {\r\n        const newIndex = this.state.hourlyProperty.id -1\r\n        this.setState({\r\n            hourlyProperty: this.state.forecastHourlyElements[newIndex]\r\n        })\r\n    }\r\n    \r\n    getForecastDaily = (props)=>{\r\n\r\n\r\n        this.state.forecastDailyElements.length=0\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              const localTime = new Date().toLocaleString()\r\n              console.log(response)\r\n              for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElements:[...this.state.forecastDailyElements,{\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'temp':CalCelsius(response.daily[i].temp.day),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                    }],\r\n                    dailyProperty:this.state.forecastDailyElements[0]\r\n                })\r\n                console.log(response.daily[i].weather[0].id)\r\n            }   \r\n          })\r\n        console.log(this.dailyProperty)\r\n    }\r\n    getForecastHourly = (props)=>{\r\n\r\n\r\n        this.state.forecastHourlyElements.length=0\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              const localTime = new Date().toLocaleString()\r\n              console.log(response)\r\n              for (var i = 0; i < 48; i++) {\r\n                this.setState({\r\n                    forecastHourlyElements:[...this.state.forecastHourlyElements,{\r\n                        'id':i,\r\n                        'date':CalDate(response.hourly[i].dt),\r\n                        'time':CalTime(response.hourly[i].dt,response.timezone_offset),\r\n                        'weather':response.hourly[i].weather[0].description,\r\n                        'temp':CalCelsius(response.hourly[i].temp),\r\n                        'pressure':response.hourly[i].pressure,\r\n                        'wind':CalWindSpeed(response.hourly[i].wind_speed),\r\n                        'image':weatherIcons[response.hourly[i].weather[0].id],\r\n                    }],\r\n                    hourlyProperty:this.state.forecastHourlyElements[0]\r\n                })\r\n            }\r\n          })\r\n    }\r\n    componentDidMount(){\r\n       this.getForecastDaily()\r\n       this.getForecastHourly()  \r\n    }\r\n    render(){\r\n        const {forecastDailyElements, forecastHourlyElements, dailyProperty, hourlyProperty}=this.state\r\n\r\n        return(\r\n            <div className=\"main\">\r\n            \r\n                <button onClick={ this.getForecastDaily.bind(this) }>Refresh Component</button>\r\n\r\n                <button onClick={ this.getForecastHourly.bind(this) }>Refresh Component</button>\r\n\r\n                {dailyProperty ?(\r\n                <button \r\n                onClick={() => this.nextdailyProperty()} \r\n                disabled={dailyProperty.id === forecastDailyElements.length-1}\r\n                >Next</button>\r\n                ):null}\r\n                \r\n                {dailyProperty ?(\r\n                <button \r\n                onClick={() => this.prevdailyProperty()} \r\n                disabled={dailyProperty.id === 0}\r\n                >Prev</button>\r\n                ):null}\r\n\r\n                {hourlyProperty ?(\r\n                <button \r\n                onClick={() => this.nexthourlyProperty()} \r\n                disabled={hourlyProperty.id === forecastHourlyElements.length-1}\r\n                >Next</button>\r\n                ):null}\r\n                \r\n                {hourlyProperty ?(\r\n                <button \r\n                onClick={() => this.prevhourlyProperty()} \r\n                disabled={hourlyProperty.id === 0}\r\n                >Prev</button>\r\n                ):null}\r\n\r\n                {dailyProperty ?(\r\n                <div className=\"cards-slider\">\r\n                <div className=\"cards-slider-wrapper\" style={{\r\n                    'transform':`translateX(-${dailyProperty.id*(100/forecastDailyElements.length)}%)`\r\n                }}>\r\n                {forecastDailyElements.map(fde => <ForecastDailyItem key={fde.id} element={fde} />)}\r\n                </div>\r\n                </div>\r\n                ):null}\r\n                \r\n                {hourlyProperty ?(\r\n                <div className=\"cards-slider2\">\r\n                <div className=\"cards-slider-wrapper2\" style={{\r\n                    'transform':`translateX(-${hourlyProperty.id*(100/forecastHourlyElements.length)}%)`\r\n                }}>\r\n                {forecastHourlyElements.map(fhe => <ForecastHourlyItem key={fhe.id} element={fhe} />)}\r\n                </div>\r\n                </div>\r\n                ):null}\r\n            </div>\r\n\r\n    \r\n        )\r\n    }\r\n}\r\nconst weatherIcons = {\r\n    200:'/images/thunderstorm.png',\r\n    201:'/images/thunderstorm.png',\r\n    202:'/images/thunderstorm.png',\r\n    210:'/images/thunderstorm.png',\r\n    211:'/images/thunderstorm.png',\r\n    212:'/images/thunderstorm.png',\r\n    221:'/images/thunderstorm.png',\r\n    230:'/images/thunderstorm.png',\r\n    231:'/images/thunderstorm.png',\r\n    232:'/images/thunderstorm.png',\r\n    300:'/images/drizzle.png',\r\n    301:'/images/drizzle.png',\r\n    302:'/images/drizzle.png',\r\n    310:'/images/drizzle.png',\r\n    311:'/images/drizzle.png',\r\n    312:'/images/drizzle.png',\r\n    313:'/images/drizzle.png',\r\n    314:'/images/drizzle.png',\r\n    321:'/images/drizzle.png',\r\n    500:'/images/rain.png',\r\n    501:'/images/rain.png',\r\n    503:'/images/rain.png',\r\n    504:'/images/rain.png',\r\n    511:'/images/rain.png',\r\n    520:'/images/rain.png',\r\n    521:'/images/rain.png',\r\n    522:'/images/rain.png',\r\n    531:'/images/rain.png',\r\n    500:'/images/rain.png',\r\n    600:'/images/snow.png',\r\n    601:'/images/snow.png',\r\n    602:'/images/snow.png',\r\n    611:'/images/snow.png',\r\n    612:'/images/snow.png',\r\n    613:'/images/snow.png',\r\n    615:'/images/snow.png',\r\n    616:'/images/snow.png',\r\n    620:'/images/snow.png',\r\n    621:'/images/snow.png',\r\n    622:'/images/snow.png',\r\n    701:'/images/mist.png',\r\n    711:'/images/mist.png',\r\n    721:'/images/mist.png',\r\n    731:'/images/mist.png',\r\n    741:'/images/mist.png',\r\n    751:'/images/mist.png',\r\n    761:'/images/mist.png',\r\n    762:'/images/mist.png',\r\n    771:'/images/mist.png',\r\n    781:'/images/mist.png',\r\n    800:'/images/clear.png',\r\n    801:'/images/clouds.png',\r\n    802:'/images/clouds.png',\r\n    803:'/images/clouds.png',\r\n    804:'/images/clouds.png',\r\n}\r\nexport default Forecast"]},"metadata":{},"sourceType":"module"}