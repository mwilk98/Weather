{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\UserPanel\\\\UserPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './UserPanel.css';\nimport Axios from 'axios';\nimport UserWeatherItem from './UserWeatherItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPanel() {\n  _s();\n\n  const [cityName, setCityName] = useState('');\n  const [weatherState, setWeatherState] = useState('');\n  const [cityWeatherList, setcityWeatherList] = useState([]);\n  const [property, setProperty] = useState([]);\n  const [usernameReg, setUsernameReg] = useState('');\n  const [passwordReg, setPasswordReg] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState('');\n  console.log(loginStatus);\n\n  const register = () => {\n    Axios.post('http://localhost:3001/api/register', {\n      username: usernameReg,\n      password: passwordReg\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  const login = () => {\n    Axios.post('http://localhost:3001/api/login', {\n      username: username,\n      password: password\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n        console.log(loginStatus);\n      } else {\n        setLoginStatus(response.data[0].username);\n      }\n    });\n  };\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setcityWeatherList(response.data);\n      setProperty(response.data[0]);\n    });\n  }, []);\n\n  const submitWeather = () => {\n    Axios.post('http://localhost:3001/api/insert', {\n      cityName: cityName,\n      weatherState: weatherState\n    });\n    setcityWeatherList([...cityWeatherList, {\n      city: cityName,\n      weather: weatherState\n    }]);\n  };\n\n  const nextProperty = () => {\n    const newIndex = property.id;\n    setProperty(cityWeatherList[newIndex]);\n    console.log(newIndex);\n    console.log(property);\n  };\n\n  const prevProperty = () => {\n    const newIndex = property.id - 2;\n    setProperty(cityWeatherList[newIndex]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setUsernameReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setPasswordReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loginStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }, this);\n}\n\n_s(UserPanel, \"Hl8r/J9O0bh5ug+sclcRWISzaus=\");\n\n_c = UserPanel;\nexport default UserPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPanel\");","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/UserPanel/UserPanel.js"],"names":["React","useState","useEffect","Axios","UserWeatherItem","UserPanel","cityName","setCityName","weatherState","setWeatherState","cityWeatherList","setcityWeatherList","property","setProperty","usernameReg","setUsernameReg","passwordReg","setPasswordReg","username","setUsername","password","setPassword","loginStatus","setLoginStatus","console","log","register","post","then","response","login","data","message","get","submitWeather","city","weather","nextProperty","newIndex","id","prevProperty","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './UserPanel.css';\nimport Axios from 'axios'\nimport UserWeatherItem from './UserWeatherItem';\n\nfunction UserPanel(){\n\n    const [cityName, setCityName] = useState('')\n    const [weatherState, setWeatherState] = useState('')\n\n    const [cityWeatherList, setcityWeatherList] = useState([])\n    const [property, setProperty] = useState([])\n\n    const [usernameReg, setUsernameReg] = useState('')\n    const [passwordReg, setPasswordReg] = useState('')\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const [loginStatus, setLoginStatus] = useState('')\n    console.log(loginStatus)\n\n    const register = () => {\n        Axios.post('http://localhost:3001/api/register',{\n            username:usernameReg,\n            password:passwordReg\n        }).then((response) =>{\n            console.log(response)\n        })\n    }\n\n    const login = () => {\n        Axios.post('http://localhost:3001/api/login',{\n            username:username,\n            password:password\n        }).then((response) =>{\n            console.log(response)\n            if(response.data.message){\n                setLoginStatus(response.data.message)\n                console.log(loginStatus)\n            }else{\n                setLoginStatus(response.data[0].username)\n            }\n        })\n    }\n    useEffect(()=>{\n        Axios.get('http://localhost:3001/api/get')\n        .then((response)=>{\n            setcityWeatherList(response.data)\n            setProperty(response.data[0])\n        })\n\n    },[])\n    \n    const submitWeather = () =>{\n\n        Axios.post('http://localhost:3001/api/insert',{\n            cityName:cityName,weatherState:weatherState\n        })\n        setcityWeatherList([...cityWeatherList,{\n                city:cityName,\n                weather:weatherState\n            },])\n    }\n    const nextProperty = () => {\n        const newIndex = property.id\n\n        setProperty(cityWeatherList[newIndex])\n        console.log(newIndex)\n        console.log(property)\n    }\n    \n    const prevProperty = () => {\n        const newIndex = property.id-2\n        setProperty(cityWeatherList[newIndex])\n    }\n        return(\n            <div>\n            <div className=\"register\">\n                <h1>Registration</h1>\n                <label>Username</label>\n                <input type=\"text\" onChange={(e)=>{\n                    setUsernameReg(e.target.value)\n                    }}\n                />\n                <label>Password</label>\n                <input type=\"text\" onChange={(e)=>{\n                    setPasswordReg(e.target.value)\n                    }}\n                />\n                <button onClick={register}>Register</button>\n            </div>\n            <div className=\"login\">\n                <h1>Login</h1>\n                <label>Username</label>\n                <input type=\"text\" onChange={(e)=>{\n                    setUsername(e.target.value)\n                    }}\n                />\n                <label>Password</label>\n                <input type=\"text\" onChange={(e)=>{\n                    setPassword(e.target.value)\n                    }}\n                />\n                <button onClick={login}>Login</button>\n            </div>\n            <h1>\n                {loginStatus}\n            </h1>\n        </div>\n        )\n    }\nexport default UserPanel"]},"metadata":{},"sourceType":"module"}