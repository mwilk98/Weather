{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\Compare\\\\Compare.js\";\nimport React from 'react';\nimport Form from '../Form/Form';\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport CalCelsius from '../Functions/CalCelsius';\nimport CalWindSpeed from '../Functions/CalWindSpeed';\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem';\nimport './Compare.css';\nimport CompareForecastItem from './CompareForecastItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key_OWM = \"157d33f8987d245bc6a1997408e90015\";\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\";\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\";\n\nclass Compare extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextOWMProperty = () => {\n      const newIndex = this.state.OWMProperty.id + 1;\n      this.setState({\n        OWMProperty: this.state.forecastDailyElementsOWM[newIndex]\n      });\n      console.log(newIndex);\n    };\n\n    this.prevOWMProperty = () => {\n      const newIndex = this.state.OWMProperty.id - 1;\n      this.setState({\n        OWMProperty: this.state.forecastDailyElementsOWM[newIndex]\n      });\n    };\n\n    this.nextOtherProperty = () => {\n      const newIndex = this.state.OtherProperty.id + 1;\n      this.setState({\n        WAProperty: this.state.forecastDailyElementsOther[newIndex]\n      });\n      console.log(newIndex);\n    };\n\n    this.prevOtherroperty = () => {\n      const newIndex = this.state.OtherProperty.id - 1;\n      this.setState({\n        WAProperty: this.state.forecastDailyElementsOther[newIndex]\n      });\n    };\n\n    this.setOpenWeatherMap = () => {\n      this.setState({\n        source: \"OpenWeatherMap\"\n      });\n    };\n\n    this.setWeatherApi = () => {\n      this.setState({\n        source: \"WeatherApi\"\n      });\n      this.getForecastDailyWA(this.state.city);\n    };\n\n    this.setTomorrowIO = () => {\n      this.setState({\n        source: \"TomorrowIO\"\n      });\n      this.getWeatherTommorowIo(this.state.lat, this.state.lon);\n    };\n\n    this.getWeatherOpenweathermap = e => {\n      e.preventDefault();\n      this.state.compareCurrentElements.length = 0;\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.getForecastDailyOWM(response.coord.lat, response.coord.lon); //this.getWeatherWeatherApi(this.state.value)\n        //this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\n        //this.getWeatherVisualcrossing(this.state.value)\n\n        this.getWeatherWeatherbit(this.state.value);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 1,\n            'date': CalDate(response.dt),\n            'weather': response.weather[0].description,\n            'temp': CalCelsius(response.main.temp),\n            'pressure': response.main.pressure,\n            'wind': CalWindSpeed(response.wind.speed),\n            'image': weatherIcons[response.weather[0].id],\n            'source': \"OpenWeatherMap\"\n          }],\n          city: response.name,\n          lat: response.coord.lat,\n          lon: response.coord.lon,\n          weatherComp: response.weather[0].description,\n          tempComp: CalCelsius(response.main.temp),\n          pressureComp: response.main.pressure,\n          windComp: CalWindSpeed(response.wind.speed)\n        });\n        this.setState({\n          currentProperty: this.state.compareCurrentElements[0]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getForecastDailyOWM = (lat, lon) => {\n      console.log(lat);\n      this.state.forecastDailyElementsOWM.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key_OWM}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElementsOWM: [...this.state.forecastDailyElementsOWM, {\n              'id': i,\n              'date': CalDate(response.daily[i].dt),\n              'weather': response.daily[i].weather[0].description,\n              'tempMax': CalCelsius(response.daily[i].temp.max),\n              'tempMin': CalCelsius(response.daily[i].temp.min),\n              'pressure': response.daily[i].pressure,\n              'wind': CalWindSpeed(response.daily[i].wind_speed),\n              'image': weatherIcons[response.daily[i].weather[0].id],\n              'clouds': response.daily[i].clouds,\n              'humidity': response.daily[i].humidity\n            }]\n          });\n        }\n\n        this.setState({\n          OWMProperty: this.state.forecastDailyElementsOWM[1]\n        });\n      });\n    };\n\n    this.getWeatherWeatherApi = city => {\n      fetch(`http://api.weatherapi.com/v1/current.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes&lang=pl\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.getForecastDailyWA(city);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 2,\n            'date': response.current.last_updated,\n            'weather': response.current.condition.text,\n            'temp': response.current.temp_c,\n            'pressure': response.current.pressure_mb,\n            'wind': response.current.wind_kph,\n            'image': weatherIcons[response.current.condition.code],\n            'source': \"WeatherApi\"\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getForecastDailyWA = city => {\n      this.state.forecastDailyElementsOther.length = 0;\n      fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=4&aqi=yes&alerts=yes&lang=pl\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n\n        for (var i = 0; i < 3; i++) {\n          this.setState({\n            forecastDailyElementsOther: [...this.state.forecastDailyElementsOther, {\n              'id': i,\n              'date': response.forecast.forecastday[i].date,\n              'weather': response.forecast.forecastday[i].day.condition.text,\n              'tempMax': response.forecast.forecastday[i].day.maxtemp_c,\n              'tempMin': response.forecast.forecastday[i].day.mintemp_c,\n              'pressure': \"-\",\n              'wind': \"-\",\n              'image': weatherIcons[response.forecast.forecastday[i].day.condition.code],\n              'clouds': \"-\",\n              'humidity': response.forecast.forecastday[i].day.avghumidity\n            }]\n          });\n        }\n\n        this.setState({\n          OtherProperty: this.state.forecastDailyElementsOther[1]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherTommorowIo = (lat, lon) => {\n      this.state.forecastDailyElementsOther.length = 0;\n      fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 3,\n            'date': response.data.timelines[0].startTime,\n            'weather': weatherConditions[response.data.timelines[0].intervals[0].values.weatherCode],\n            'temp': response.data.timelines[0].intervals[0].values.temperature,\n            'pressure': response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\n            'wind': CalWindSpeed(response.data.timelines[0].intervals[0].values.windSpeed),\n            'image': weatherIcons[response.data.timelines[0].intervals[0].values.weatherCode],\n            'source': \"TommorowIo\"\n          }]\n        });\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElementsOther: [...this.state.forecastDailyElementsOther, {\n              'id': i,\n              'date': response.data.timelines[0].intervals[i].startTime,\n              'weather': weatherConditions[response.data.timelines[0].intervals[i].values.weatherCode],\n              'tempMax': response.data.timelines[0].intervals[i].values.temperature,\n              'tempMin': response.data.timelines[0].intervals[i].values.temperature,\n              'pressure': response.data.timelines[0].intervals[i].values.pressureSurfaceLevel,\n              'wind': response.data.timelines[0].intervals[i].values.windSpeed,\n              'image': weatherIcons[response.data.timelines[0].intervals[i].values.weatherCode],\n              'clouds': response.data.timelines[0].intervals[i].values.cloudCover,\n              'humidity': response.data.timelines[0].intervals[i].values.humidity\n            }]\n          });\n        }\n\n        this.setState({\n          OtherProperty: this.state.forecastDailyElementsOther[1]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherVisualcrossing = city => {\n      this.state.forecastDailyElementsOther.length = 0;\n      fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 4,\n            'date': response.location.currentConditions.datetime,\n            'weather': response.location.currentConditions.icon,\n            'temp': response.location.currentConditions.temp,\n            'pressure': response.location.currentConditions.sealevelpressure,\n            'wind': response.location.currentConditions.wspd,\n            'image': weatherIcons[0],\n            'source': \"VisualCrossing\"\n          }]\n        });\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElementsOther: [...this.state.forecastDailyElementsOther, {\n              'id': i,\n              'date': CalDate(response.location.values[i].datetime),\n              'weather': response.location.values[i].conditions,\n              'tempMax': response.location.values[i].maxt,\n              'tempMin': response.location.values[i].mint,\n              'pressure': \"-\",\n              'wind': 1.6 * response.location.values[i].wspd,\n              'image': \"-\",\n              'clouds': response.location.values[i].cloudcover,\n              'humidity': response.location.values[i].humidity\n            }]\n          });\n        }\n\n        this.setState({\n          OtherProperty: this.state.forecastDailyElementsOther[1]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherWeatherbit = city => {\n      this.state.compareCurrentElements.length = 0;\n      fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&lang=pl&key=${API_key_w}\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 5,\n            'date': response.data[0].ob_time,\n            'weather': response.data[0].weather.description,\n            'temp': response.data[0].temp,\n            'pressure': Math.floor(response.data[0].pres),\n            'wind': Math.floor(1.609 * response.data[0].wind_spd),\n            'image': weatherIcons[response.data[0].weather.code],\n            'source': \"Weatherbit\"\n          }]\n        });\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElementsOther: [...this.state.forecastDailyElementsOther, {\n              'id': i,\n              'date': response.data[i].datetime,\n              'weather': response.data[i].weather.description,\n              'tempMax': response.data[i].max_temp,\n              'tempMin': response.data[i].min_temp,\n              'pressure': response.data[i].pres,\n              'wind': Math.floor(1.609 * response.data[i].wind_spd),\n              'image': weatherIcons[response.data[i].weather.code],\n              'clouds': response.data[i].clouds,\n              'humidity': \"-\"\n            }]\n          });\n        }\n\n        this.setState({\n          OtherProperty: this.state.forecastDailyElementsOther[1]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      compareCurrentElements: [],\n      forecastDailyElementsOWM: [],\n      forecastDailyElementsOther: [],\n      source: \"OpenWeatherMap\",\n      city: undefined,\n      lat: undefined,\n      lon: undefined,\n      currentProperty: undefined,\n      OWMProperty: undefined,\n      OtherProperty: undefined,\n      weatherComp: undefined,\n      tempComp: undefined,\n      pressureComp: undefined,\n      windComp: undefined,\n      error: false\n    };\n  }\n\n  render() {\n    if (this.state.source == \"OpenWeatherMap\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            value: this.state.value,\n            handler: this.inputHandler,\n            submit: this.getWeatherOpenweathermap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main-cards\",\n          children: this.state.currentProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"compare-cards-slider\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"compare-cards-slider-wrapper\",\n              style: {\n                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\n              },\n              children: this.state.compareCurrentElements.map(fde => /*#__PURE__*/_jsxDEV(CompareCurrentWeatherItem, {\n                compare: this.state,\n                element: fde\n              }, fde.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"OpenWeatherMap\"),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"WeatherApi\"),\n          children: \"WeatherApi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"TomorrowIO\"),\n          children: \"TommorowIO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"VisualCrossing\"),\n          children: \"VisualCrossing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"Weatherbit\"),\n          children: \"Weatherbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main\",\n          children: this.state.OWMProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"left\",\n              onClick: () => this.nextOWMProperty(),\n              disabled: this.state.OWMProperty.id === this.state.forecastDailyElementsOWM.length - 3,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"right\",\n              onClick: () => this.prevOWMProperty(),\n              disabled: this.state.OWMProperty.id === 1,\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards-slider\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards-slider-wrapper\",\n                style: {\n                  'transform': `translateX(-${this.state.OWMProperty.id * (100 / this.state.forecastDailyElementsOWM.length)}%)`\n                },\n                children: this.state.forecastDailyElementsOWM.map(fde => /*#__PURE__*/_jsxDEV(CompareForecastItem, {\n                  element: fde\n                }, fde.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 89\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.state.source == \"WeatherApi\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            value: this.state.value,\n            handler: this.inputHandler,\n            submit: this.getWeatherOpenweathermap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main-cards\",\n          children: this.state.currentProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"compare-cards-slider\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"compare-cards-slider-wrapper\",\n              style: {\n                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\n              },\n              children: this.state.compareCurrentElements.map(fde => /*#__PURE__*/_jsxDEV(CompareCurrentWeatherItem, {\n                compare: this.state,\n                element: fde\n              }, fde.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"OpenWeatherMap\"),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"WeatherApi\"),\n          children: \"WeatherApi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"TomorrowIO\"),\n          children: \"TommorowIO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"VisualCrossing\"),\n          children: \"VisualCrossing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"Weatherbit\"),\n          children: \"Weatherbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main\",\n          children: this.state.OtherProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-cards\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards-slider\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards-slider-wrapper\",\n                style: {\n                  'transform': `translateX(-${this.state.OtherProperty.id * (100 / this.state.forecastDailyElementsOther.length)}%)`\n                },\n                children: this.state.forecastDailyElementsOther.map(fde => /*#__PURE__*/_jsxDEV(CompareForecastItem, {\n                  element: fde\n                }, fde.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 91\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.source == \"TomorrowIO\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            value: this.state.value,\n            handler: this.inputHandler,\n            submit: this.getWeatherOpenweathermap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main-cards\",\n          children: this.state.currentProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"compare-cards-slider\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"compare-cards-slider-wrapper\",\n              style: {\n                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\n              },\n              children: this.state.compareCurrentElements.map(fde => /*#__PURE__*/_jsxDEV(CompareCurrentWeatherItem, {\n                compare: this.state,\n                element: fde\n              }, fde.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"OpenWeatherMap\"),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"WeatherApi\"),\n          children: \"WeatherApi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"TomorrowIO\"),\n          children: \"TommorowIO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"VisualCrossing\"),\n          children: \"VisualCrossing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"Weatherbit\"),\n          children: \"Weatherbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main\",\n          children: this.state.OtherProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-cards\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards-slider\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards-slider-wrapper\",\n                style: {\n                  'transform': `translateX(-${this.state.OtherProperty.id * (100 / this.state.forecastDailyElementsOther.length)}%)`\n                },\n                children: this.state.forecastDailyElementsOther.map(fde => /*#__PURE__*/_jsxDEV(CompareForecastItem, {\n                  element: fde\n                }, fde.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 91\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.state.source == \"VisualCrossing\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            value: this.state.value,\n            handler: this.inputHandler,\n            submit: this.getWeatherOpenweathermap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main-cards\",\n          children: this.state.currentProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"compare-cards-slider\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"compare-cards-slider-wrapper\",\n              style: {\n                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\n              },\n              children: this.state.compareCurrentElements.map(fde => /*#__PURE__*/_jsxDEV(CompareCurrentWeatherItem, {\n                compare: this.state,\n                element: fde\n              }, fde.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"OpenWeatherMap\"),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"WeatherApi\"),\n          children: \"WeatherApi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"TomorrowIO\"),\n          children: \"TommorowIO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"VisualCrossing\"),\n          children: \"VisualCrossing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"Weatherbit\"),\n          children: \"Weatherbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main\",\n          children: this.state.OtherProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-cards\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards-slider\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards-slider-wrapper\",\n                style: {\n                  'transform': `translateX(-${this.state.OtherProperty.id * (100 / this.state.forecastDailyElementsOther.length)}%)`\n                },\n                children: this.state.forecastDailyElementsOther.map(fde => /*#__PURE__*/_jsxDEV(CompareForecastItem, {\n                  element: fde\n                }, fde.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 91\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.state.source == \"Weatherbit\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            value: this.state.value,\n            handler: this.inputHandler,\n            submit: this.getWeatherOpenweathermap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main-cards\",\n          children: this.state.currentProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"compare-cards-slider\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"compare-cards-slider-wrapper\",\n              style: {\n                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\n              },\n              children: this.state.compareCurrentElements.map(fde => /*#__PURE__*/_jsxDEV(CompareCurrentWeatherItem, {\n                compare: this.state,\n                element: fde\n              }, fde.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"OpenWeatherMap\"),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"WeatherApi\"),\n          children: \"WeatherApi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"TomorrowIO\"),\n          children: \"TommorowIO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"VisualCrossing\"),\n          children: \"VisualCrossing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setForecastSource(\"Weatherbit\"),\n          children: \"Weatherbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main\",\n          children: this.state.OtherProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-cards\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards-slider\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards-slider-wrapper\",\n                style: {\n                  'transform': `translateX(-${this.state.OtherProperty.id * (100 / this.state.forecastDailyElementsOther.length)}%)`\n                },\n                children: this.state.forecastDailyElementsOther.map(fde => /*#__PURE__*/_jsxDEV(CompareForecastItem, {\n                  element: fde\n                }, fde.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 91\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nconst weatherIcons = {\n  200: '/images/200.png',\n  201: '/images/201.png',\n  202: '/images/202.png',\n  210: '/images/210.png',\n  211: '/images/211.png',\n  212: '/images/212.png',\n  221: '/images/212.png',\n  230: '/images/230D.png',\n  231: '/images/231.png',\n  232: '/images/232.png',\n  300: '/images/300D.png',\n  301: '/images/301.png',\n  302: '/images/302.png',\n  310: '/images/310D.png',\n  311: '/images/311.png',\n  312: '/images/312.png',\n  313: '/images/313_1.png',\n  314: '/images/314.png',\n  321: '/images/321.png',\n  500: '/images/500D.png',\n  501: '/images/501.png',\n  502: '/images/502.png',\n  503: '/images/503.png',\n  504: '/images/504.png',\n  511: '/images/511.png',\n  520: '/images/520D.png',\n  521: '/images/521_2.png',\n  522: '/images/522_1.png',\n  531: '/images/522_1.png',\n  600: '/images/600D.png',\n  601: '/images/601.png',\n  602: '/images/602.png',\n  611: '/images/611.png',\n  612: '/images/612D.png',\n  613: '/images/613.png',\n  615: '/images/615D.png',\n  616: '/images/616.png',\n  620: '/images/620D.png',\n  621: '/images/621.png',\n  622: '/images/622.png',\n  701: '/images/701_2.png',\n  711: '/images/701_2.png',\n  721: '/images/701_2.png',\n  731: '/images/701_2.png',\n  741: '/images/701_2.png',\n  751: '/images/701_2.png',\n  761: '/images/701_2.png',\n  762: '/images/701_2.png',\n  771: '/images/701_2.png',\n  781: '/images/701_2.png',\n  800: '/images/800D.png',\n  801: '/images/801D.png',\n  802: '/images/802D.png',\n  803: '/images/803D.png',\n  804: '/images/804.png',\n  1000: '/images/800D.png',\n  1003: '/images/801D.png',\n  1006: '/images/802D.png',\n  1009: '/images/804.png',\n  1030: '/images/701_2.png',\n  1063: '/images/500D.png',\n  1066: '/images/600.png',\n  1069: '/images/613.png',\n  1072: '/images/511.png',\n  1087: '/images/200.png',\n  1114: '/images/602.png',\n  1117: '/images/622.png',\n  1135: '/images/702_1.png',\n  1147: '/images/702_1.png',\n  1150: '/images/300D.png',\n  1153: '/images/301.png',\n  1168: '/images/511.png',\n  1171: '/images/501.png',\n  1180: '/images/502.png',\n  1183: '/images/500D.png',\n  1186: '/images/500D.png',\n  1189: '/images/501.png',\n  1192: '/images/502.png',\n  1195: '/images/503.png',\n  1198: '/images/511.png',\n  1201: '/images/511.png',\n  1204: '/images/611.png',\n  1207: '/images/612D.png',\n  1210: '/images/600D.png',\n  1213: '/images/600D.png',\n  1216: '/images/601.png',\n  1219: '/images/601.png',\n  1222: '/images/602.png',\n  1225: '/images/602.png',\n  1237: '/images/511.png',\n  1240: '/images/520.png',\n  1243: '/images/521_2.png',\n  1246: '/images/522_1.png',\n  1249: '/images/612D.png',\n  1252: '/images/613.png',\n  1255: '/images/612D.png',\n  1258: '/images/613.png',\n  1261: '/images/511.png',\n  1264: '/images/511.png',\n  1273: '/images/200.png',\n  1276: '/images/201.png',\n  1279: '/images/602.png',\n  1282: '/images/602.png',\n  4201: '/images/502.png',\n  4001: '/images/501.png',\n  4200: '/images/500D.png',\n  6201: '/images/511.png',\n  6001: '/images/511.png',\n  6200: '/images/511.png',\n  6000: '/images/511.png',\n  4000: '/images/301.png',\n  7101: '/images/511.png',\n  7000: '/images/511.png',\n  7102: '/images/511.png',\n  5101: '/images/602.png',\n  5000: '/images/601.png',\n  5100: '/images/600D.png',\n  5001: '/images/601.png',\n  8000: '/images/201.png',\n  2100: '/images/701_2.png',\n  2000: '/images/701_2.png',\n  1001: '/images/804.png',\n  1102: '/images/803D.png',\n  1101: '/images/802D.png',\n  1100: '/images/801D.png',\n  1000: '/images/800D.png'\n};\nconst weatherConditions = {\n  4201: 'Duży deszcz',\n  4001: 'Deszcz',\n  4200: 'Lekki Deszcz',\n  6201: 'Duży Marznący Deszcz',\n  6001: 'Marznący Deszcz',\n  6200: 'Lekki Marznący Deszcz',\n  6000: 'Marznąca Mrzawka',\n  4000: 'Mrzawka',\n  7101: 'Duże Krupy',\n  7000: 'Krupy',\n  7102: 'Lekkie Krupy',\n  5101: 'Duży Śnieg',\n  5000: 'Śnieg',\n  5100: 'Lekki Śnieg',\n  5001: 'Zamieć',\n  8000: 'Burza',\n  2100: 'Lekka Mgła',\n  2000: 'Mgła',\n  1001: 'Pochmurnie',\n  1102: 'Przewaga Chmur',\n  1101: 'Częściowe Zachmurzenie',\n  1100: 'Przeważnie Słonecznie',\n  1000: 'Słonecznie'\n};\nexport default Compare;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/Compare/Compare.js"],"names":["React","Form","CalDate","CalTime","CalCelsius","CalWindSpeed","CompareCurrentWeatherItem","CompareForecastItem","API_key_OWM","API_key_WA","API_key_w","Compare","Component","constructor","props","nextOWMProperty","newIndex","state","OWMProperty","id","setState","forecastDailyElementsOWM","console","log","prevOWMProperty","nextOtherProperty","OtherProperty","WAProperty","forecastDailyElementsOther","prevOtherroperty","setOpenWeatherMap","source","setWeatherApi","getForecastDailyWA","city","setTomorrowIO","getWeatherTommorowIo","lat","lon","getWeatherOpenweathermap","e","preventDefault","compareCurrentElements","length","fetch","value","then","response","ok","Error","json","getForecastDailyOWM","coord","getWeatherWeatherbit","dt","weather","description","main","temp","pressure","wind","speed","weatherIcons","name","weatherComp","tempComp","pressureComp","windComp","currentProperty","catch","err","prevState","error","i","daily","max","min","wind_speed","clouds","humidity","getWeatherWeatherApi","current","last_updated","condition","text","temp_c","pressure_mb","wind_kph","code","forecast","forecastday","date","day","maxtemp_c","mintemp_c","avghumidity","data","timelines","startTime","weatherConditions","intervals","values","weatherCode","temperature","pressureSurfaceLevel","windSpeed","cloudCover","getWeatherVisualcrossing","location","currentConditions","datetime","icon","sealevelpressure","wspd","conditions","maxt","mint","cloudcover","ob_time","Math","floor","pres","wind_spd","max_temp","min_temp","inputHandler","target","undefined","render","map","fde","setForecastSource"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem'\r\nimport './Compare.css';\r\nimport CompareForecastItem from './CompareForecastItem';\r\n\r\nconst API_key_OWM=\"157d33f8987d245bc6a1997408e90015\"\r\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\"\r\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\"\r\nclass Compare extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            value:\"\",\r\n            compareCurrentElements:[\r\n            ],\r\n            forecastDailyElementsOWM:[\r\n            ],\r\n            forecastDailyElementsOther:[\r\n            ],\r\n            source:\"OpenWeatherMap\",\r\n            city:undefined,\r\n            lat:undefined,\r\n            lon:undefined,\r\n            currentProperty:undefined,\r\n            OWMProperty:undefined,\r\n            OtherProperty:undefined,\r\n            weatherComp:undefined,\r\n            tempComp:undefined,\r\n            pressureComp:undefined,\r\n            windComp:undefined,\r\n            error:false\r\n        }\r\n    }\r\n    nextOWMProperty = () => {\r\n        const newIndex = this.state.OWMProperty.id +1\r\n        this.setState({\r\n            OWMProperty: this.state.forecastDailyElementsOWM[newIndex]\r\n        })\r\n        console.log(newIndex)\r\n    }\r\n    prevOWMProperty= () => {\r\n        const newIndex = this.state.OWMProperty.id -1\r\n        this.setState({\r\n            OWMProperty: this.state.forecastDailyElementsOWM[newIndex]\r\n        })\r\n    }\r\n    nextOtherProperty = () => {\r\n        const newIndex = this.state.OtherProperty.id +1\r\n        this.setState({\r\n            WAProperty: this.state.forecastDailyElementsOther[newIndex]\r\n        })\r\n        console.log(newIndex)\r\n    }\r\n    prevOtherroperty= () => {\r\n        const newIndex = this.state.OtherProperty.id -1\r\n        this.setState({\r\n            WAProperty: this.state.forecastDailyElementsOther[newIndex]\r\n        })\r\n    }\r\n    setOpenWeatherMap = () => {\r\n        this.setState({\r\n            source:\"OpenWeatherMap\"\r\n        })\r\n    }\r\n    setWeatherApi = () => {\r\n        this.setState({\r\n            source:\"WeatherApi\"\r\n        })\r\n        this.getForecastDailyWA(this.state.city)\r\n    }\r\n    setTomorrowIO = () => {\r\n        this.setState({\r\n            source:\"TomorrowIO\"\r\n        })\r\n        this.getWeatherTommorowIo(this.state.lat,this.state.lon)\r\n    }\r\n    \r\n\r\n    getWeatherOpenweathermap = (e) =>{\r\n        e.preventDefault()\r\n        \r\n        this.state.compareCurrentElements.length=0\r\n\r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.getForecastDailyOWM(response.coord.lat,response.coord.lon)\r\n            //this.getWeatherWeatherApi(this.state.value)\r\n            //this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\r\n            //this.getWeatherVisualcrossing(this.state.value)\r\n            this.getWeatherWeatherbit(this.state.value)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':1,\r\n                    'date':CalDate(response.dt),\r\n                    'weather':response.weather[0].description,\r\n                    'temp':CalCelsius(response.main.temp),\r\n                    'pressure':response.main.pressure,\r\n                    'wind':CalWindSpeed(response.wind.speed),\r\n                    'image':weatherIcons[response.weather[0].id],\r\n                    'source':\"OpenWeatherMap\"\r\n                }],\r\n                city:response.name,\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                weatherComp:response.weather[0].description,\r\n                tempComp:CalCelsius(response.main.temp),\r\n                pressureComp:response.main.pressure,\r\n                windComp:CalWindSpeed(response.wind.speed),\r\n            })\r\n            this.setState({\r\n                currentProperty:this.state.compareCurrentElements[0]\r\n            }) \r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    getForecastDailyOWM = (lat,lon)=>{\r\n\r\n        console.log(lat)\r\n        this.state.forecastDailyElementsOWM.length=0\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key_OWM}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              console.log(response)\r\n              for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElementsOWM:[...this.state.forecastDailyElementsOWM,{\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'tempMax':CalCelsius(response.daily[i].temp.max),\r\n                        'tempMin':CalCelsius(response.daily[i].temp.min),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                        'clouds':response.daily[i].clouds,\r\n                        'humidity':response.daily[i].humidity,\r\n                    }],  \r\n                })\r\n            }  \r\n            this.setState({\r\n                OWMProperty:this.state.forecastDailyElementsOWM[1]\r\n            }) \r\n          })\r\n    }\r\n    getWeatherWeatherApi = (city) =>{\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/current.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes&lang=pl\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.getForecastDailyWA(city)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':2,\r\n                    'date':response.current.last_updated,\r\n                    'weather':response.current.condition.text,\r\n                    'temp':response.current.temp_c,\r\n                    'pressure':response.current.pressure_mb,\r\n                    'wind':response.current.wind_kph,\r\n                    'image':weatherIcons[response.current.condition.code],\r\n                    'source':\"WeatherApi\"\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    getForecastDailyWA = (city) =>{\r\n\r\n        this.state.forecastDailyElementsOther.length=0\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=4&aqi=yes&alerts=yes&lang=pl\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            for (var i = 0; i < 3; i++) {\r\n            this.setState({\r\n                forecastDailyElementsOther:[...this.state.forecastDailyElementsOther,{\r\n                    'id':i,\r\n                    'date':response.forecast.forecastday[i].date,\r\n                    'weather':response.forecast.forecastday[i].day.condition.text,\r\n                    'tempMax':response.forecast.forecastday[i].day.maxtemp_c,\r\n                    'tempMin':response.forecast.forecastday[i].day.mintemp_c,\r\n                    'pressure':\"-\",\r\n                    'wind':\"-\",\r\n                    'image':weatherIcons[response.forecast.forecastday[i].day.condition.code],\r\n                    'clouds':\"-\",\r\n                    'humidity':response.forecast.forecastday[i].day.avghumidity,\r\n                }],\r\n            })\r\n            }\r\n            this.setState({\r\n                OtherProperty:this.state.forecastDailyElementsOther[1]\r\n            }) \r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    getWeatherTommorowIo = (lat,lon) =>{\r\n        this.state.forecastDailyElementsOther.length=0\r\n            \r\n        fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':3,\r\n                    'date':response.data.timelines[0].startTime,\r\n                    'weather':weatherConditions[response.data.timelines[0].intervals[0].values.weatherCode],\r\n                    'temp':response.data.timelines[0].intervals[0].values.temperature,\r\n                    'pressure':response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\r\n                    'wind':CalWindSpeed(response.data.timelines[0].intervals[0].values.windSpeed),\r\n                    'image':weatherIcons[response.data.timelines[0].intervals[0].values.weatherCode],\r\n                    'source':\"TommorowIo\"\r\n                }],\r\n            })\r\n            for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElementsOther:[...this.state.forecastDailyElementsOther,{\r\n                        'id':i,\r\n                        'date':response.data.timelines[0].intervals[i].startTime,\r\n                        'weather':weatherConditions[response.data.timelines[0].intervals[i].values.weatherCode],\r\n                        'tempMax':response.data.timelines[0].intervals[i].values.temperature,\r\n                        'tempMin':response.data.timelines[0].intervals[i].values.temperature,\r\n                        'pressure':response.data.timelines[0].intervals[i].values.pressureSurfaceLevel,\r\n                        'wind':response.data.timelines[0].intervals[i].values.windSpeed,\r\n                        'image':weatherIcons[response.data.timelines[0].intervals[i].values.weatherCode],\r\n                        'clouds':response.data.timelines[0].intervals[i].values.cloudCover,\r\n                        'humidity':response.data.timelines[0].intervals[i].values.humidity,\r\n                    }],  \r\n                })\r\n            }  \r\n            this.setState({\r\n                OtherProperty:this.state.forecastDailyElementsOther[1]\r\n            }) \r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    \r\n    getWeatherVisualcrossing = (city) =>{\r\n\r\n        this.state.forecastDailyElementsOther.length=0\r\n            \r\n        fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':4,\r\n                    'date':response.location.currentConditions.datetime,\r\n                    'weather':response.location.currentConditions.icon,\r\n                    'temp':response.location.currentConditions.temp,\r\n                    'pressure':response.location.currentConditions.sealevelpressure,\r\n                    'wind':response.location.currentConditions.wspd,\r\n                    'image':weatherIcons[0],\r\n                    'source':\"VisualCrossing\"\r\n                }],\r\n            })\r\n            for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElementsOther:[...this.state.forecastDailyElementsOther,{\r\n                        'id':i,\r\n                        'date':CalDate(response.location.values[i].datetime),\r\n                        'weather':response.location.values[i].conditions,\r\n                        'tempMax':response.location.values[i].maxt,\r\n                        'tempMin':response.location.values[i].mint,\r\n                        'pressure':\"-\",\r\n                        'wind':1.6*response.location.values[i].wspd,\r\n                        'image':\"-\",\r\n                        'clouds':response.location.values[i].cloudcover,\r\n                        'humidity':response.location.values[i].humidity,\r\n                    }],  \r\n                })\r\n            }  \r\n            this.setState({\r\n                OtherProperty:this.state.forecastDailyElementsOther[1]\r\n            }) \r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    } \r\n    getWeatherWeatherbit = (city) =>{\r\n\r\n        this.state.compareCurrentElements.length=0\r\n            \r\n        fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&lang=pl&key=${API_key_w}\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':5,\r\n                    'date':response.data[0].ob_time,\r\n                    'weather':response.data[0].weather.description,\r\n                    'temp':response.data[0].temp,\r\n                    'pressure':Math.floor(response.data[0].pres),\r\n                    'wind':Math.floor(1.609*response.data[0].wind_spd),\r\n                    'image':weatherIcons[response.data[0].weather.code],\r\n                    'source':\"Weatherbit\"\r\n                }],\r\n            })\r\n            for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElementsOther:[...this.state.forecastDailyElementsOther,{\r\n                        'id':i,\r\n                        'date':response.data[i].datetime,\r\n                        'weather':response.data[i].weather.description,\r\n                        'tempMax':response.data[i].max_temp,\r\n                        'tempMin':response.data[i].min_temp,\r\n                        'pressure':response.data[i].pres,\r\n                        'wind':Math.floor(1.609*response.data[i].wind_spd),\r\n                        'image':weatherIcons[response.data[i].weather.code],\r\n                        'clouds':response.data[i].clouds,\r\n                        'humidity':\"-\",\r\n                    }],  \r\n                })\r\n            }  \r\n            this.setState({\r\n                OtherProperty:this.state.forecastDailyElementsOther[1]\r\n            }) \r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }  \r\n    inputHandler=(e)=>{\r\n        this.setState({\r\n            value:e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.source==\"OpenWeatherMap\"){\r\n            return( <div>\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeatherOpenweathermap}\r\n                /> \r\n                </div>\r\n                <div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ?( \r\n                    <div className=\"compare-cards-slider\">\r\n                        <div className=\"compare-cards-slider-wrapper\" style={{\r\n                            'transform':`translateX(-${this.state.currentProperty.id*(100/this.state.compareCurrentElements.length)}%)`\r\n                        }}>\r\n                            {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem compare={this.state} key={fde.id} element={fde} />)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    ):null}\r\n                </div>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"OpenWeatherMap\")} \r\n                >OpenWeatherMap\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"WeatherApi\")} \r\n                >WeatherApi\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"TomorrowIO\")} \r\n                >TommorowIO\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"VisualCrossing\")} \r\n                >VisualCrossing\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"Weatherbit\")} \r\n                >Weatherbit\r\n                </button>\r\n                <div className=\"compare-main\">\r\n                {this.state.OWMProperty ?(\r\n                <div className=\"main-cards\">  \r\n                <button className=\"left\" \r\n                                onClick={() => this.nextOWMProperty()} \r\n                                disabled={this.state.OWMProperty.id === this.state.forecastDailyElementsOWM.length-3}\r\n                            >Next\r\n                            </button>\r\n                            <button className=\"right\"\r\n                                    onClick={() => this.prevOWMProperty()} \r\n                                    disabled={this.state.OWMProperty.id === 1}\r\n                            >Prev\r\n                            </button>\r\n                \r\n                                <div className=\"cards-slider\">         \r\n                                    <div className=\"cards-slider-wrapper\" style={{\r\n                                                                            'transform':`translateX(-${this.state.OWMProperty.id*(100/this.state.forecastDailyElementsOWM.length)}%)`\r\n                                    }}>\r\n                                        {this.state.forecastDailyElementsOWM.map(fde => <CompareForecastItem key={fde.id} element={fde} />)}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            ):null}\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        if(this.state.source==\"WeatherApi\"){\r\n            return(\r\n                <div>\r\n                    <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeatherOpenweathermap}\r\n                /> \r\n                </div>\r\n                <div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ?( \r\n                    <div className=\"compare-cards-slider\">\r\n                        <div className=\"compare-cards-slider-wrapper\" style={{\r\n                            'transform':`translateX(-${this.state.currentProperty.id*(100/this.state.compareCurrentElements.length)}%)`\r\n                        }}>\r\n                            {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem compare={this.state} key={fde.id} element={fde} />)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    ):null}\r\n                </div>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"OpenWeatherMap\")} \r\n                >OpenWeatherMap\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"WeatherApi\")} \r\n                >WeatherApi\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"TomorrowIO\")} \r\n                >TommorowIO\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"VisualCrossing\")} \r\n                >VisualCrossing\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"Weatherbit\")} \r\n                >Weatherbit\r\n                </button>\r\n                    <div className=\"compare-main\">\r\n                {this.state.OtherProperty ?(\r\n                <div className=\"main-cards\"> \r\n                \r\n                                <div className=\"cards-slider\">         \r\n                                    <div className=\"cards-slider-wrapper\" style={{\r\n                                                                            'transform':`translateX(-${this.state.OtherProperty.id*(100/this.state.forecastDailyElementsOther.length)}%)`\r\n                                    }}>\r\n                                        {this.state.forecastDailyElementsOther.map(fde => <CompareForecastItem key={fde.id} element={fde} />)}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            ):null}\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.source==\"TomorrowIO\"){\r\n            return( <div>\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeatherOpenweathermap}\r\n                /> \r\n                </div>\r\n                <div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ?( \r\n                    <div className=\"compare-cards-slider\">\r\n                        <div className=\"compare-cards-slider-wrapper\" style={{\r\n                            'transform':`translateX(-${this.state.currentProperty.id*(100/this.state.compareCurrentElements.length)}%)`\r\n                        }}>\r\n                            {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem compare={this.state} key={fde.id} element={fde} />)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    ):null}\r\n                </div>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"OpenWeatherMap\")} \r\n                >OpenWeatherMap\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"WeatherApi\")} \r\n                >WeatherApi\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"TomorrowIO\")} \r\n                >TommorowIO\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"VisualCrossing\")} \r\n                >VisualCrossing\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"Weatherbit\")} \r\n                >Weatherbit\r\n                </button>\r\n                <div className=\"compare-main\">\r\n                {this.state.OtherProperty ?(\r\n                <div className=\"main-cards\"> \r\n                \r\n                                <div className=\"cards-slider\">         \r\n                                    <div className=\"cards-slider-wrapper\" style={{\r\n                                                                            'transform':`translateX(-${this.state.OtherProperty.id*(100/this.state.forecastDailyElementsOther.length)}%)`\r\n                                    }}>\r\n                                        {this.state.forecastDailyElementsOther.map(fde => <CompareForecastItem key={fde.id} element={fde} />)}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            ):null}\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        if(this.state.source==\"VisualCrossing\"){\r\n            return( <div>\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeatherOpenweathermap}\r\n                /> \r\n                </div>\r\n                <div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ?( \r\n                    <div className=\"compare-cards-slider\">\r\n                        <div className=\"compare-cards-slider-wrapper\" style={{\r\n                            'transform':`translateX(-${this.state.currentProperty.id*(100/this.state.compareCurrentElements.length)}%)`\r\n                        }}>\r\n                            {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem compare={this.state} key={fde.id} element={fde} />)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    ):null}\r\n                </div>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"OpenWeatherMap\")} \r\n                >OpenWeatherMap\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"WeatherApi\")} \r\n                >WeatherApi\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"TomorrowIO\")} \r\n                >TommorowIO\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"VisualCrossing\")} \r\n                >VisualCrossing\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"Weatherbit\")} \r\n                >Weatherbit\r\n                </button>\r\n                <div className=\"compare-main\">\r\n                {this.state.OtherProperty ?(\r\n                <div className=\"main-cards\"> \r\n                \r\n                                <div className=\"cards-slider\">         \r\n                                    <div className=\"cards-slider-wrapper\" style={{\r\n                                                                            'transform':`translateX(-${this.state.OtherProperty.id*(100/this.state.forecastDailyElementsOther.length)}%)`\r\n                                    }}>\r\n                                        {this.state.forecastDailyElementsOther.map(fde => <CompareForecastItem key={fde.id} element={fde} />)}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            ):null}\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        if(this.state.source==\"Weatherbit\"){\r\n            return( <div>\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeatherOpenweathermap}\r\n                /> \r\n                </div>\r\n                <div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ?( \r\n                    <div className=\"compare-cards-slider\">\r\n                        <div className=\"compare-cards-slider-wrapper\" style={{\r\n                            'transform':`translateX(-${this.state.currentProperty.id*(100/this.state.compareCurrentElements.length)}%)`\r\n                        }}>\r\n                            {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem compare={this.state} key={fde.id} element={fde} />)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    ):null}\r\n                </div>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"OpenWeatherMap\")} \r\n                >OpenWeatherMap\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"WeatherApi\")} \r\n                >WeatherApi\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"TomorrowIO\")} \r\n                >TommorowIO\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"VisualCrossing\")} \r\n                >VisualCrossing\r\n                </button>\r\n                <button \r\n                onClick={() => this.setForecastSource(\"Weatherbit\")} \r\n                >Weatherbit\r\n                </button>\r\n                <div className=\"compare-main\">\r\n                {this.state.OtherProperty ?(\r\n                <div className=\"main-cards\"> \r\n                \r\n                                <div className=\"cards-slider\">         \r\n                                    <div className=\"cards-slider-wrapper\" style={{\r\n                                                                            'transform':`translateX(-${this.state.OtherProperty.id*(100/this.state.forecastDailyElementsOther.length)}%)`\r\n                                    }}>\r\n                                        {this.state.forecastDailyElementsOther.map(fde => <CompareForecastItem key={fde.id} element={fde} />)}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            ):null}\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\nconst weatherIcons = {\r\n    200:'/images/200.png',\r\n    201:'/images/201.png',\r\n    202:'/images/202.png',\r\n    210:'/images/210.png',\r\n    211:'/images/211.png',\r\n    212:'/images/212.png',\r\n    221:'/images/212.png',\r\n    230:'/images/230D.png',\r\n    231:'/images/231.png',\r\n    232:'/images/232.png',\r\n    300:'/images/300D.png',\r\n    301:'/images/301.png',\r\n    302:'/images/302.png',\r\n    310:'/images/310D.png',\r\n    311:'/images/311.png',\r\n    312:'/images/312.png',\r\n    313:'/images/313_1.png',\r\n    314:'/images/314.png',\r\n    321:'/images/321.png',\r\n    500:'/images/500D.png',\r\n    501:'/images/501.png',\r\n    502:'/images/502.png',\r\n    503:'/images/503.png',\r\n    504:'/images/504.png',\r\n    511:'/images/511.png',\r\n    520:'/images/520D.png',\r\n    521:'/images/521_2.png',\r\n    522:'/images/522_1.png',\r\n    531:'/images/522_1.png',\r\n    600:'/images/600D.png',\r\n    601:'/images/601.png',\r\n    602:'/images/602.png',\r\n    611:'/images/611.png',\r\n    612:'/images/612D.png',\r\n    613:'/images/613.png',\r\n    615:'/images/615D.png',\r\n    616:'/images/616.png',\r\n    620:'/images/620D.png',\r\n    621:'/images/621.png',\r\n    622:'/images/622.png',\r\n    701:'/images/701_2.png',\r\n    711:'/images/701_2.png',\r\n    721:'/images/701_2.png',\r\n    731:'/images/701_2.png',\r\n    741:'/images/701_2.png',\r\n    751:'/images/701_2.png',\r\n    761:'/images/701_2.png',\r\n    762:'/images/701_2.png',\r\n    771:'/images/701_2.png',\r\n    781:'/images/701_2.png',\r\n    800:'/images/800D.png',\r\n    801:'/images/801D.png',\r\n    802:'/images/802D.png',\r\n    803:'/images/803D.png',\r\n    804:'/images/804.png',\r\n    1000:'/images/800D.png',\r\n    1003:'/images/801D.png',\r\n    1006:'/images/802D.png',\r\n    1009:'/images/804.png',\r\n    1030:'/images/701_2.png',\r\n    1063:'/images/500D.png',\r\n    1066:'/images/600.png',\r\n    1069:'/images/613.png',\r\n    1072:'/images/511.png',\r\n    1087:'/images/200.png',\r\n    1114:'/images/602.png',\r\n    1117:'/images/622.png',\r\n    1135:'/images/702_1.png',\r\n    1147:'/images/702_1.png',\r\n    1150:'/images/300D.png',\r\n    1153:'/images/301.png',\r\n    1168:'/images/511.png',\r\n    1171:'/images/501.png',\r\n    1180:'/images/502.png',\r\n    1183:'/images/500D.png',\r\n    1186:'/images/500D.png',\r\n    1189:'/images/501.png',\r\n    1192:'/images/502.png',\r\n    1195:'/images/503.png',\r\n    1198:'/images/511.png',\r\n    1201:'/images/511.png',\r\n    1204:'/images/611.png',\r\n    1207:'/images/612D.png',\r\n    1210:'/images/600D.png',\r\n    1213:'/images/600D.png',\r\n    1216:'/images/601.png',\r\n    1219:'/images/601.png',\r\n    1222:'/images/602.png',\r\n    1225:'/images/602.png',\r\n    1237:'/images/511.png',\r\n    1240:'/images/520.png',\r\n    1243:'/images/521_2.png',\r\n    1246:'/images/522_1.png',\r\n    1249:'/images/612D.png',\r\n    1252:'/images/613.png',\r\n    1255:'/images/612D.png',\r\n    1258:'/images/613.png',\r\n    1261:'/images/511.png',\r\n    1264:'/images/511.png',\r\n    1273:'/images/200.png',\r\n    1276:'/images/201.png',\r\n    1279:'/images/602.png',\r\n    1282:'/images/602.png',\r\n    4201:'/images/502.png',\r\n    4001:'/images/501.png',\r\n    4200:'/images/500D.png',\r\n    6201:'/images/511.png',\r\n    6001:'/images/511.png',\r\n    6200:'/images/511.png',\r\n    6000:'/images/511.png',\r\n    4000:'/images/301.png',\r\n    7101:'/images/511.png',\r\n    7000:'/images/511.png',\r\n    7102:'/images/511.png',\r\n    5101:'/images/602.png',\r\n    5000:'/images/601.png',\r\n    5100:'/images/600D.png',\r\n    5001:'/images/601.png',\r\n    8000:'/images/201.png',\r\n    2100:'/images/701_2.png',\r\n    2000:'/images/701_2.png',\r\n    1001:'/images/804.png',\r\n    1102:'/images/803D.png',\r\n    1101:'/images/802D.png',\r\n    1100:'/images/801D.png',\r\n    1000:'/images/800D.png',\r\n}\r\nconst weatherConditions = {\r\n    4201:'Duży deszcz',\r\n    4001:'Deszcz',\r\n    4200:'Lekki Deszcz',\r\n    6201:'Duży Marznący Deszcz',\r\n    6001:'Marznący Deszcz',\r\n    6200:'Lekki Marznący Deszcz',\r\n    6000:'Marznąca Mrzawka',\r\n    4000:'Mrzawka',\r\n    7101:'Duże Krupy',\r\n    7000:'Krupy',\r\n    7102:'Lekkie Krupy',\r\n    5101:'Duży Śnieg',\r\n    5000:'Śnieg',\r\n    5100:'Lekki Śnieg',\r\n    5001:'Zamieć',\r\n    8000:'Burza',\r\n    2100:'Lekka Mgła',\r\n    2000:'Mgła',\r\n    1001:'Pochmurnie',\r\n    1102:'Przewaga Chmur',\r\n    1101:'Częściowe Zachmurzenie',\r\n    1100:'Przeważnie Słonecznie',\r\n    1000:'Słonecznie',\r\n}\r\nexport default Compare"]},"metadata":{},"sourceType":"module"}