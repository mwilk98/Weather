{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\UserPanel\\\\UserPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './UserPanel.css';\nimport Axios from 'axios';\nimport UserWeatherItem from './UserWeatherItem';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPanel() {\n  _s();\n\n  const [cityName, setCityName] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [weatherState, setWeatherState] = useState('');\n  const [temp, setTemp] = useState('');\n  const [clouds, setClouds] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [pressure, setPressure] = useState('');\n  const [wind, setWind] = useState('');\n  const [aqi, setAqi] = useState('');\n  const [cityWeatherList, setcityWeatherList] = useState([]);\n  const [property, setProperty] = useState([]);\n  const [loginStatus, setLoginStatus] = useState('');\n  console.log(loginStatus);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/login').then(response => {\n      if (response.data.loggedIn == true) {\n        setLoginStatus(response.data.user[0].username);\n        console.log(response);\n      } else {\n        setLoginStatus(\"unlogged\");\n      }\n    });\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setcityWeatherList(response.data);\n      setProperty(response.data[0]);\n    });\n  }, []);\n\n  const submitWeather = () => {\n    Axios.post('http://localhost:3001/api/insert', {\n      cityName: cityName,\n      weatherState: weatherState\n    });\n    setcityWeatherList([...cityWeatherList, {\n      city: cityName,\n      weather: weatherState\n    }]);\n  };\n\n  const nextProperty = () => {\n    const newIndex = property.id;\n    setProperty(cityWeatherList[newIndex]);\n    console.log(newIndex);\n    console.log(property);\n  };\n\n  const prevProperty = () => {\n    const newIndex = property.id - 2;\n    setProperty(cityWeatherList[newIndex]);\n  };\n\n  if (loginStatus != \"unlogged\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      style: {\n        backgroundImage: `url(\"/images/bg_myWeather.jpg\")`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Moja Pogoda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Miejsce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cityName\",\n            onChange: e => {\n              setCityName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"date\",\n            onChange: e => {\n              setDate(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Godzina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"time\",\n            onChange: e => {\n              setTime(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pogoda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"weather\",\n            onChange: e => {\n              setWeatherState(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Temperatura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"temp\",\n            onChange: e => {\n              setTemp(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Zachmurzenie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"clouds\",\n            onChange: e => {\n              setClouds(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Wilgotno\\u015B\\u0107\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"humidity\",\n            onChange: e => {\n              setHumidity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ci\\u015Bnienie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"pressure\",\n            onChange: e => {\n              setPressure(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Wiatr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"wind\",\n            onChange: e => {\n              setWind(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Jako\\u015B\\u0107 powietrza\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"aqi\",\n            onChange: e => {\n              setAqi(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitWeather,\n            children: \"Dodaj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-cards\",\n          children: property ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userCards-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"left\",\n              onClick: () => nextProperty(),\n              disabled: property.id === cityWeatherList.length,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userCards-slider-wrapper\",\n              style: {\n                'transform': `translateX(-${property.id * (100 / cityWeatherList.length)}%)`\n              },\n              children: cityWeatherList.map(fde => /*#__PURE__*/_jsxDEV(UserWeatherItem, {\n                element: fde\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 57\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"right\",\n              onClick: () => prevProperty(),\n              disabled: property.id === 1,\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Musisz by\\u0107 zalogowanym aby korzysta\\u0107 z tej funkcji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-up\",\n        children: \"Zaloguj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(UserPanel, \"xb0YfBbJSsw1YnKLtyaH340nxig=\");\n\n_c = UserPanel;\nexport default UserPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPanel\");","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/UserPanel/UserPanel.js"],"names":["React","useState","useEffect","Axios","UserWeatherItem","Link","UserPanel","cityName","setCityName","date","setDate","time","setTime","weatherState","setWeatherState","temp","setTemp","clouds","setClouds","humidity","setHumidity","pressure","setPressure","wind","setWind","aqi","setAqi","cityWeatherList","setcityWeatherList","property","setProperty","loginStatus","setLoginStatus","console","log","get","then","response","data","loggedIn","user","username","submitWeather","post","city","weather","nextProperty","newIndex","id","prevProperty","backgroundImage","e","target","value","length","map","fde"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './UserPanel.css';\nimport Axios from 'axios'\nimport UserWeatherItem from './UserWeatherItem';\nimport {Link} from 'react-router-dom'\n\nfunction UserPanel(){\n\n    const [cityName, setCityName] = useState('')\n    const [date, setDate] = useState('')\n    const [time, setTime] = useState('')\n    const [weatherState, setWeatherState] = useState('')\n    const [temp, setTemp] = useState('')\n    const [clouds, setClouds] = useState('')\n    const [humidity, setHumidity] = useState('')\n    const [pressure, setPressure] = useState('')\n    const [wind, setWind] = useState('')\n    const [aqi, setAqi] = useState('')\n\n\n    const [cityWeatherList, setcityWeatherList] = useState([])\n    const [property, setProperty] = useState([])\n\n    const [loginStatus, setLoginStatus] = useState('')\n    console.log(loginStatus)\n\n   \n    useEffect(()=>{\n        Axios.get('http://localhost:3001/api/login').then((response)=>{\n            if(response.data.loggedIn==true){\n                setLoginStatus(response.data.user[0].username)\n                console.log(response)\n            }else{\n                setLoginStatus(\"unlogged\")\n            }\n        })\n        Axios.get('http://localhost:3001/api/get')\n        .then((response)=>{\n            setcityWeatherList(response.data)\n            setProperty(response.data[0])\n        })\n    },[])\n    const submitWeather = () =>{\n\n        Axios.post('http://localhost:3001/api/insert',{\n            cityName:cityName,weatherState:weatherState\n        })\n        setcityWeatherList([...cityWeatherList,{\n                city:cityName,\n                weather:weatherState\n            },])\n    }\n    const nextProperty = () => {\n        const newIndex = property.id\n\n        setProperty(cityWeatherList[newIndex])\n        console.log(newIndex)\n        console.log(property)\n    }\n    \n    const prevProperty = () => {\n        const newIndex = property.id-2\n        setProperty(cityWeatherList[newIndex])\n    }\n    if(loginStatus!=\"unlogged\"){\n        return(\n            <div className=\"main\"style={{ \n                backgroundImage: `url(\"/images/bg_myWeather.jpg\")` \n              }}>\n            <div className='user-panel'>\n                <h1>Moja Pogoda</h1>  \n                <div className='user-form'>\n                    <label>Miejsce</label>\n                    <input type=\"text\" name=\"cityName\" onChange={(e)=>{\n                        setCityName(e.target.value)\n                    }}/>\n                    <label>Data</label>\n                    <input type=\"text\" name=\"date\"onChange={(e)=>{\n                        setDate(e.target.value)\n                    }}/>\n                    <label>Godzina</label>\n                    <input type=\"text\" name=\"time\"onChange={(e)=>{\n                        setTime(e.target.value)\n                    }}/>\n                    <label>Pogoda</label>\n                    <input type=\"text\" name=\"weather\"onChange={(e)=>{\n                        setWeatherState(e.target.value)\n                    }}/>\n                    <label>Temperatura</label>\n                    <input type=\"text\" name=\"temp\"onChange={(e)=>{\n                        setTemp(e.target.value)\n                    }}/>\n                    <label>Zachmurzenie</label>\n                    <input type=\"text\" name=\"clouds\"onChange={(e)=>{\n                        setClouds(e.target.value)\n                    }}/>\n                    <label>Wilgotność</label>\n                    <input type=\"text\" name=\"humidity\"onChange={(e)=>{\n                        setHumidity(e.target.value)\n                    }}/>\n                    <label>Ciśnienie</label>\n                    <input type=\"text\" name=\"pressure\"onChange={(e)=>{\n                        setPressure(e.target.value)\n                    }}/>\n                    <label>Wiatr</label>\n                    <input type=\"text\" name=\"wind\"onChange={(e)=>{\n                        setWind(e.target.value)\n                    }}/>\n                    <label>Jakość powietrza</label>\n                    <input type=\"text\" name=\"aqi\"onChange={(e)=>{\n                        setAqi(e.target.value)\n                    }}/>\n                    <button onClick={submitWeather}>Dodaj</button>\n                </div>\n                <div className=\"main-cards\">\n                {property ?(\n                    <div className=\"userCards-slider\">\n                        <button className=\"left\" \n                                onClick={() => nextProperty()} \n                                disabled={property.id === cityWeatherList.length}\n                                >Next\n                        </button>\n                        <div className=\"userCards-slider-wrapper\" style={{\n                            'transform':`translateX(-${property.id*(100/cityWeatherList.length)}%)`\n                        }}>\n                            {cityWeatherList.map(fde => <UserWeatherItem element={fde} />)}\n                        </div>\n                        <button className=\"right\"\n                                onClick={() => prevProperty()} \n                                disabled={property.id === 1}\n                        >Prev\n                        </button>\n                    </div>\n                    ):null}\n                </div>\n            </div>\n            </div>\n        )\n    }else{\n        return(\n            <div><h1>Musisz być zalogowanym aby korzystać z tej funkcji</h1>\n            <Link to='/sign-up'>\n                Zaloguj\n            </Link>\n            </div> \n        )\n    }\n}\nexport default UserPanel"]},"metadata":{},"sourceType":"module"}