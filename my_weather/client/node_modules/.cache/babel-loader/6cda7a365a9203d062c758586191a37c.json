{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\WeatherAlerts\\\\WeatherAlerts.js\";\nimport React from 'react';\nimport Form from '../Form/Form';\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport WeatherAlertsItem from './WeatherAlertsItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"157d33f8987d245bc6a1997408e90015\";\n\nclass WeatherAlerts extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      city: \"\",\n      country: \"\",\n      description: \"\",\n      end: undefined,\n      event: \"\",\n      sender_name: \"\",\n      start: undefined,\n      error: false\n    };\n\n    this.getAir = e => {\n      e.preventDefault();\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n        this.setState(state => ({\n          city: state.value,\n          country: response.sys.country,\n          date: CalDate(response.dt),\n          time: CalTime(response.dt, response.timezone),\n          lat: response.coord.lat,\n          lon: response.coord.lon,\n          error: false\n        }));\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.coord.lat}&lon=${response.coord.lon}&lang=pl&appid=${API_key}`).then(response2 => {\n          if (response2.ok) {\n            return response2;\n          }\n\n          throw Error(\"Błąd pobierania danych z API\");\n        }).then(response2 => response2.json()).then(response2 => {\n          console.log(response2);\n\n          if (response2.alerts) {\n            this.setState(state => ({\n              description: response2.alerts[0].description,\n              error: false\n            }));\n          } else {\n            this.setState(state => ({\n              description: \"brak alertów\",\n              error: false\n            }));\n          }\n        }).catch(err => {\n          console.log(err);\n          this.setState(prevState => {\n            return {\n              error: true,\n              city: prevState.city\n            };\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      this.getAir(e);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      style: {\n        backgroundImage: `url(\"/images/bg_alerts.png\")`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Alrty Pogodowe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          value: this.state.value,\n          handler: this.inputHandler,\n          submit: this.submitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WeatherAlertsItem, {\n          alert: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherAlerts;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/WeatherAlerts/WeatherAlerts.js"],"names":["React","Form","CalDate","CalTime","WeatherAlertsItem","API_key","WeatherAlerts","Component","state","value","city","country","description","end","undefined","event","sender_name","start","error","getAir","e","preventDefault","fetch","then","response","ok","Error","json","localTime","Date","toLocaleString","console","log","setState","sys","date","dt","time","timezone","lat","coord","lon","response2","alerts","catch","err","prevState","inputHandler","target","submitHandler","render","backgroundImage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Form from '../Form/Form'\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport WeatherAlertsItem from './WeatherAlertsItem'\n\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\n\n\nclass WeatherAlerts extends React.Component{\n    state={\n        value:\"\",\n        city:\"\",\n        country:\"\",\n        description:\"\",\n        end:undefined,\n        event:\"\",\n        sender_name:\"\",\n        start:undefined,\n        error:false\n    }\n    getAir = (e) =>{\n        \n        e.preventDefault()\n          \n          fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`)\n          .then(response => {\n              if(response.ok){\n                  return response\n              }\n              throw Error(\"Błąd pobierania danych z API\")\n          })\n          .then(response => response.json())\n          .then(response => {\n              const localTime = new Date().toLocaleString()\n              console.log(response)\n              this.setState(state =>({\n                city:state.value,\n                country:response.sys.country,\n                date:CalDate(response.dt),\n                time:CalTime(response.dt,response.timezone),\n                lat:response.coord.lat,\n                lon:response.coord.lon, \n                error:false\n              }))\n              fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.coord.lat}&lon=${response.coord.lon}&lang=pl&appid=${API_key}`)\n          .then(response2 => {\n              if(response2.ok){\n                  return response2\n              }\n              throw Error(\"Błąd pobierania danych z API\")\n          })\n          .then(response2 => response2.json())\n          .then(response2 => {\n              console.log(response2)\n              if(response2.alerts){\n                this.setState(state =>({\n                        description:response2.alerts[0].description,\n                        error:false\n                      }))   \n              }else{\n                this.setState(state =>({\n                        description:\"brak alertów\",\n                        error:false\n                      }))\n              }\n          })\n          .catch(err =>{\n            console.log(err)\n            this.setState(prevState =>{\n                return{\n                error:true,\n                city:prevState.city\n            }})\n        })\n          })\n          .catch(err =>{\n            console.log(err)\n            this.setState(prevState =>{\n                return{\n                error:true,\n                city:prevState.city\n            }})\n        })\n    }\n    inputHandler=(e)=>{\n        this.setState({\n            value:e.target.value\n        })\n    }\n    submitHandler=(e)=>{\n        this.getAir(e)\n    }\n    render(){\n        \n        return(\n            <div className=\"main\"style={{ \n                backgroundImage: `url(\"/images/bg_alerts.png\")` \n              }}>\n                <h1>Alrty Pogodowe</h1>\n                <div>\n                <Form \n                value={this.state.value}  \n                handler={this.inputHandler}\n                submit={this.submitHandler}\n                /> \n                </div> \n                <div>\n                <WeatherAlertsItem alert={this.state}/> \n                </div>\n            </div>\n            \n        )\n    }\n}\nexport default WeatherAlerts"]},"metadata":{},"sourceType":"module"}