{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\currentWeather\\\\CurrentWeather.js\";\nimport React from 'react';\nimport WeatherItem from './WeatherItem';\nimport Form from '../Form/Form';\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport CalCelsius from '../Functions/CalCelsius';\nimport CalWindSpeed from '../Functions/CalWindSpeed';\nimport ForecastDailyItem from './ForecastDailyItem';\nimport ForecastHourlyItem from './ForecastHourlyItem';\nimport './Forecast.css';\nimport './CurrentWeather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"157d33f8987d245bc6a1997408e90015\"; //const localTime = new Date().toLocaleString()\n\nclass CurrentWeather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextdailyProperty = () => {\n      const newIndex = this.state.dailyProperty.id + 1;\n      this.setState({\n        dailyProperty: this.state.forecastDailyElements[newIndex]\n      });\n    };\n\n    this.prevdailyProperty = () => {\n      const newIndex = this.state.dailyProperty.id - 1;\n      this.setState({\n        dailyProperty: this.state.forecastDailyElements[newIndex]\n      });\n    };\n\n    this.nexthourlyProperty = () => {\n      const newIndex = this.state.hourlyProperty.id + 1;\n      this.setState({\n        hourlyProperty: this.state.forecastHourlyElements[newIndex]\n      });\n    };\n\n    this.prevhourlyProperty = () => {\n      const newIndex = this.state.hourlyProperty.id - 1;\n      this.setState({\n        hourlyProperty: this.state.forecastHourlyElements[newIndex]\n      });\n    };\n\n    this.getWeather = e => {\n      e.preventDefault();\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n        this.getForecastDaily(response.coord.lat, response.coord.lon);\n        this.getForecastHourly(response.coord.lat, response.coord.lon);\n        this.setState(state => ({\n          city: state.value,\n          country: response.sys.country,\n          date: CalDate(response.dt),\n          time: CalTime(response.dt, response.timezone),\n          weather: response.weather[0].description,\n          temp: CalCelsius(response.main.temp),\n          tempMax: CalCelsius(response.main.temp_max),\n          tempMin: CalCelsius(response.main.temp_min),\n          pressure: response.main.pressure,\n          wind: CalWindSpeed(response.wind.speed),\n          image: weatherIcons[response.weather[0].id],\n          lat: response.coord.lat,\n          lon: response.coord.lon,\n          error: false\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getForecastDaily = (lat, lon) => {\n      console.log(lat);\n      this.state.forecastDailyElements.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElements: [...this.state.forecastDailyElements, {\n              'id': i,\n              'date': CalDate(response.daily[i].dt),\n              'weather': response.daily[i].weather[0].description,\n              'temp': CalCelsius(response.daily[i].temp.day),\n              'pressure': response.daily[i].pressure,\n              'wind': CalWindSpeed(response.daily[i].wind_speed),\n              'image': weatherIcons[response.daily[i].weather[0].id],\n              'background': \"/images/download.gif\"\n            }],\n            dailyProperty: this.state.forecastDailyElements[0]\n          });\n        }\n      });\n    };\n\n    this.getForecastHourly = (lat, lon) => {\n      this.state.forecastHourlyElements.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        const localTime = new Date().toLocaleString();\n        console.log(response);\n\n        for (var i = 0; i < 48; i++) {\n          this.setState({\n            forecastHourlyElements: [...this.state.forecastHourlyElements, {\n              'id': i,\n              'date': CalDate(response.hourly[i].dt),\n              'time': CalTime(response.hourly[i].dt, response.timezone_offset),\n              'weather': response.hourly[i].weather[0].description,\n              'temp': CalCelsius(response.hourly[i].temp),\n              'pressure': response.hourly[i].pressure,\n              'wind': CalWindSpeed(response.hourly[i].wind_speed),\n              'image': weatherIcons[response.hourly[i].weather[0].id]\n            }],\n            hourlyProperty: this.state.forecastHourlyElements[0]\n          });\n        }\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      city: \"\",\n      country: \"\",\n      image: undefined,\n      background: undefined,\n      weather: undefined,\n      temp: undefined,\n      tempMax: undefined,\n      tempMin: undefined,\n      pressurre: undefined,\n      wind: undefined,\n      lat: undefined,\n      lon: undefined,\n      forecastDailyElements: [],\n      forecastHourlyElements: [],\n      dailyProperty: undefined,\n      hourlyProperty: undefined,\n      error: false\n    };\n  }\n\n  render() {\n    const {\n      forecastDailyElements,\n      forecastHourlyElements,\n      dailyProperty,\n      hourlyProperty\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          value: this.state.value,\n          handler: this.inputHandler,\n          submit: this.getWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.city ? /*#__PURE__*/_jsxDEV(WeatherItem, {\n          weather: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [dailyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.nextdailyProperty(),\n          disabled: dailyProperty.id === forecastDailyElements.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this) : null, dailyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.prevdailyProperty(),\n          disabled: dailyProperty.id === 0,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this) : null, hourlyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.nexthourlyProperty(),\n          disabled: hourlyProperty.id === forecastHourlyElements.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this) : null, hourlyProperty ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.prevhourlyProperty(),\n          disabled: hourlyProperty.id === 0,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this) : null, dailyProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-slider\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-slider-wrapper\",\n            style: {\n              'transform': `translateX(-${dailyProperty.id * (100 / forecastDailyElements.length)}%)`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.nextdailyProperty(),\n              disabled: dailyProperty.id === forecastDailyElements.length - 1,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), forecastDailyElements.map(fde => /*#__PURE__*/_jsxDEV(ForecastDailyItem, {\n              element: fde\n            }, fde.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 47\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this) : null, hourlyProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-slider2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-slider-wrapper2\",\n            style: {\n              'transform': `translateX(-${hourlyProperty.id * (100 / forecastHourlyElements.length)}%)`\n            },\n            children: forecastHourlyElements.map(fhe => /*#__PURE__*/_jsxDEV(ForecastHourlyItem, {\n              element: fhe\n            }, fhe.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 48\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst weatherIcons = {\n  200: '/images/thunderstorm.png',\n  201: '/images/thunderstorm.png',\n  202: '/images/thunderstorm.png',\n  210: '/images/thunderstorm.png',\n  211: '/images/thunderstorm.png',\n  212: '/images/thunderstorm.png',\n  221: '/images/thunderstorm.png',\n  230: '/images/thunderstorm.png',\n  231: '/images/thunderstorm.png',\n  232: '/images/thunderstorm.png',\n  300: '/images/drizzle.png',\n  301: '/images/drizzle.png',\n  302: '/images/drizzle.png',\n  310: '/images/drizzle.png',\n  311: '/images/drizzle.png',\n  312: '/images/drizzle.png',\n  313: '/images/drizzle.png',\n  314: '/images/drizzle.png',\n  321: '/images/drizzle.png',\n  500: '/images/rain.png',\n  501: '/images/rain.png',\n  503: '/images/rain.png',\n  504: '/images/rain.png',\n  511: '/images/rain.png',\n  520: '/images/rain.png',\n  521: '/images/rain.png',\n  522: '/images/rain.png',\n  531: '/images/rain.png',\n  500: '/images/rain.png',\n  600: '/images/snow.png',\n  601: '/images/snow.png',\n  602: '/images/snow.png',\n  611: '/images/snow.png',\n  612: '/images/snow.png',\n  613: '/images/snow.png',\n  615: '/images/snow.png',\n  616: '/images/snow.png',\n  620: '/images/snow.png',\n  621: '/images/snow.png',\n  622: '/images/snow.png',\n  701: '/images/mist.png',\n  711: '/images/mist.png',\n  721: '/images/mist.png',\n  731: '/images/mist.png',\n  741: '/images/mist.png',\n  751: '/images/mist.png',\n  761: '/images/mist.png',\n  762: '/images/mist.png',\n  771: '/images/mist.png',\n  781: '/images/mist.png',\n  800: '/images/clear.png',\n  801: '/images/clouds.png',\n  802: '/images/clouds.png',\n  803: '/images/clouds.png',\n  804: '/images/clouds.png'\n};\nexport default CurrentWeather;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/currentWeather/CurrentWeather.js"],"names":["React","WeatherItem","Form","CalDate","CalTime","CalCelsius","CalWindSpeed","ForecastDailyItem","ForecastHourlyItem","API_key","CurrentWeather","Component","constructor","props","nextdailyProperty","newIndex","state","dailyProperty","id","setState","forecastDailyElements","prevdailyProperty","nexthourlyProperty","hourlyProperty","forecastHourlyElements","prevhourlyProperty","getWeather","e","preventDefault","fetch","value","then","response","ok","Error","json","localTime","Date","toLocaleString","console","log","getForecastDaily","coord","lat","lon","getForecastHourly","city","country","sys","date","dt","time","timezone","weather","description","temp","main","tempMax","temp_max","tempMin","temp_min","pressure","wind","speed","image","weatherIcons","error","catch","err","prevState","length","i","daily","day","wind_speed","hourly","timezone_offset","inputHandler","target","undefined","background","pressurre","render","map","fde","fhe"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport WeatherItem from './WeatherItem';\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport ForecastDailyItem from './ForecastDailyItem';\r\nimport ForecastHourlyItem from './ForecastHourlyItem';\r\nimport './Forecast.css';\r\nimport './CurrentWeather.css';\r\n\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\n//const localTime = new Date().toLocaleString()\r\n\r\nclass CurrentWeather extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            value:\"\",\r\n            city:\"\",\r\n            country:\"\",\r\n            image:undefined,\r\n            background:undefined,\r\n            weather:undefined,\r\n            temp:undefined,\r\n            tempMax:undefined,\r\n            tempMin:undefined,\r\n            pressurre:undefined,\r\n            wind:undefined,\r\n            lat:undefined,\r\n            lon:undefined,\r\n            forecastDailyElements:[\r\n            ],\r\n            forecastHourlyElements:[\r\n            ],\r\n            dailyProperty: undefined,\r\n            hourlyProperty: undefined,\r\n            error:false\r\n        }\r\n    }\r\n\r\n    nextdailyProperty = () => {\r\n        const newIndex = this.state.dailyProperty.id +1\r\n        this.setState({\r\n            dailyProperty: this.state.forecastDailyElements[newIndex]\r\n        })\r\n    }\r\n\r\n    prevdailyProperty = () => {\r\n        const newIndex = this.state.dailyProperty.id -1\r\n        this.setState({\r\n            dailyProperty: this.state.forecastDailyElements[newIndex]\r\n        })\r\n    }\r\n\r\n    nexthourlyProperty = () => {\r\n        const newIndex = this.state.hourlyProperty.id +1\r\n        this.setState({\r\n            hourlyProperty: this.state.forecastHourlyElements[newIndex]\r\n        })\r\n    }\r\n    \r\n    prevhourlyProperty = () => {\r\n        const newIndex = this.state.hourlyProperty.id -1\r\n        this.setState({\r\n            hourlyProperty: this.state.forecastHourlyElements[newIndex]\r\n        })\r\n    }\r\n    \r\n    getWeather = (e) =>{\r\n        \r\n        e.preventDefault()\r\n          \r\n          fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              const localTime = new Date().toLocaleString()\r\n              console.log(response)\r\n              this.getForecastDaily(response.coord.lat,response.coord.lon)\r\n              this.getForecastHourly(response.coord.lat,response.coord.lon)\r\n              this.setState(state =>({\r\n                city:state.value,\r\n                country:response.sys.country,\r\n                date:CalDate(response.dt),\r\n                time:CalTime(response.dt,response.timezone),\r\n                weather:response.weather[0].description,\r\n                temp:CalCelsius(response.main.temp),\r\n                tempMax:CalCelsius(response.main.temp_max),\r\n                tempMin:CalCelsius(response.main.temp_min),\r\n                pressure:response.main.pressure,\r\n                wind:CalWindSpeed(response.wind.speed),\r\n                image:weatherIcons[response.weather[0].id],\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon, \r\n                error:false\r\n              }))\r\n          })\r\n          .catch(err =>{\r\n            console.log(err)\r\n            this.setState(prevState =>{\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n        \r\n    }\r\n    getForecastDaily = (lat,lon)=>{\r\n\r\n        console.log(lat)\r\n        this.state.forecastDailyElements.length=0\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              console.log(response)\r\n              for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElements:[...this.state.forecastDailyElements,{\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'temp':CalCelsius(response.daily[i].temp.day),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                        'background':\"/images/download.gif\",\r\n                    }],\r\n                    dailyProperty:this.state.forecastDailyElements[0]\r\n                })\r\n            }   \r\n          })\r\n    }\r\n    getForecastHourly = (lat,lon)=>{\r\n\r\n        this.state.forecastHourlyElements.length=0\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              const localTime = new Date().toLocaleString()\r\n              console.log(response)\r\n              for (var i = 0; i < 48; i++) {\r\n                this.setState({\r\n                    forecastHourlyElements:[...this.state.forecastHourlyElements,{\r\n                        'id':i,\r\n                        'date':CalDate(response.hourly[i].dt),\r\n                        'time':CalTime(response.hourly[i].dt,response.timezone_offset),\r\n                        'weather':response.hourly[i].weather[0].description,\r\n                        'temp':CalCelsius(response.hourly[i].temp),\r\n                        'pressure':response.hourly[i].pressure,\r\n                        'wind':CalWindSpeed(response.hourly[i].wind_speed),\r\n                        'image':weatherIcons[response.hourly[i].weather[0].id],\r\n                    }],\r\n                    hourlyProperty:this.state.forecastHourlyElements[0]\r\n                })\r\n            }\r\n          })\r\n    }\r\n    inputHandler=(e)=>{\r\n        this.setState({\r\n            value:e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        const {forecastDailyElements, forecastHourlyElements, dailyProperty, hourlyProperty}=this.state\r\n        return(\r\n            <div >\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeather}\r\n                /> \r\n                </div> \r\n                <div>\r\n                {this.state.city ?(\r\n                    <WeatherItem weather={this.state}/>   \r\n                ):null}\r\n                </div>\r\n                <div className=\"main\">\r\n\r\n            {dailyProperty ?(\r\n            <button \r\n            onClick={() => this.nextdailyProperty()} \r\n            disabled={dailyProperty.id === forecastDailyElements.length-1}\r\n            >Next</button>\r\n            ):null}\r\n            \r\n            {dailyProperty ?(\r\n            <button \r\n            onClick={() => this.prevdailyProperty()} \r\n            disabled={dailyProperty.id === 0}\r\n            >Prev</button>\r\n            ):null}\r\n\r\n            {hourlyProperty ?(\r\n            <button \r\n            onClick={() => this.nexthourlyProperty()} \r\n            disabled={hourlyProperty.id === forecastHourlyElements.length-1}\r\n            >Next</button>\r\n            ):null}\r\n            \r\n            {hourlyProperty ?(\r\n            <button \r\n            onClick={() => this.prevhourlyProperty()} \r\n            disabled={hourlyProperty.id === 0}\r\n            >Prev</button>\r\n            ):null}\r\n\r\n            {dailyProperty ?(\r\n                \r\n            <div className=\"cards-slider\">\r\n                \r\n            <div className=\"cards-slider-wrapper\" style={{\r\n                'transform':`translateX(-${dailyProperty.id*(100/forecastDailyElements.length)}%)`\r\n            }}>\r\n                <button \r\n            onClick={() => this.nextdailyProperty()} \r\n            disabled={dailyProperty.id === forecastDailyElements.length-1}\r\n            >Next</button>\r\n            {forecastDailyElements.map(fde => <ForecastDailyItem key={fde.id} element={fde} />)}\r\n            </div>\r\n            </div>\r\n            ):null}\r\n            \r\n            {hourlyProperty ?(\r\n            <div className=\"cards-slider2\">\r\n            <div className=\"cards-slider-wrapper2\" style={{\r\n                'transform':`translateX(-${hourlyProperty.id*(100/forecastHourlyElements.length)}%)`\r\n            }}>\r\n            {forecastHourlyElements.map(fhe => <ForecastHourlyItem key={fhe.id} element={fhe} />)}\r\n            </div>\r\n            </div>\r\n            ):null}\r\n        </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst weatherIcons = {\r\n    200:'/images/thunderstorm.png',\r\n    201:'/images/thunderstorm.png',\r\n    202:'/images/thunderstorm.png',\r\n    210:'/images/thunderstorm.png',\r\n    211:'/images/thunderstorm.png',\r\n    212:'/images/thunderstorm.png',\r\n    221:'/images/thunderstorm.png',\r\n    230:'/images/thunderstorm.png',\r\n    231:'/images/thunderstorm.png',\r\n    232:'/images/thunderstorm.png',\r\n    300:'/images/drizzle.png',\r\n    301:'/images/drizzle.png',\r\n    302:'/images/drizzle.png',\r\n    310:'/images/drizzle.png',\r\n    311:'/images/drizzle.png',\r\n    312:'/images/drizzle.png',\r\n    313:'/images/drizzle.png',\r\n    314:'/images/drizzle.png',\r\n    321:'/images/drizzle.png',\r\n    500:'/images/rain.png',\r\n    501:'/images/rain.png',\r\n    503:'/images/rain.png',\r\n    504:'/images/rain.png',\r\n    511:'/images/rain.png',\r\n    520:'/images/rain.png',\r\n    521:'/images/rain.png',\r\n    522:'/images/rain.png',\r\n    531:'/images/rain.png',\r\n    500:'/images/rain.png',\r\n    600:'/images/snow.png',\r\n    601:'/images/snow.png',\r\n    602:'/images/snow.png',\r\n    611:'/images/snow.png',\r\n    612:'/images/snow.png',\r\n    613:'/images/snow.png',\r\n    615:'/images/snow.png',\r\n    616:'/images/snow.png',\r\n    620:'/images/snow.png',\r\n    621:'/images/snow.png',\r\n    622:'/images/snow.png',\r\n    701:'/images/mist.png',\r\n    711:'/images/mist.png',\r\n    721:'/images/mist.png',\r\n    731:'/images/mist.png',\r\n    741:'/images/mist.png',\r\n    751:'/images/mist.png',\r\n    761:'/images/mist.png',\r\n    762:'/images/mist.png',\r\n    771:'/images/mist.png',\r\n    781:'/images/mist.png',\r\n    800:'/images/clear.png',\r\n    801:'/images/clouds.png',\r\n    802:'/images/clouds.png',\r\n    803:'/images/clouds.png',\r\n    804:'/images/clouds.png',\r\n}\r\nexport default CurrentWeather"]},"metadata":{},"sourceType":"module"}