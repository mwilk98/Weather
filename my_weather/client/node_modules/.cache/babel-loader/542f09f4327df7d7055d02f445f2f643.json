{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\client\\\\src\\\\components\\\\Compare\\\\Compare.js\";\nimport React from 'react';\nimport Form from '../Form/Form';\nimport CalDate from '../Functions/CalDate';\nimport CalTime from '../Functions/CalTime';\nimport CalCelsius from '../Functions/CalCelsius';\nimport CalWindSpeed from '../Functions/CalWindSpeed';\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem';\nimport './Compare.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key_OWM = \"157d33f8987d245bc6a1997408e90015\";\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\";\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\";\n\nclass Compare extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextCurrentProperty = () => {\n      const newIndex = this.state.currentProperty.id + 1;\n      this.setState({\n        currentProperty: this.state.compareCurrentElements[newIndex]\n      });\n      console.log(newIndex);\n    };\n\n    this.setOpenWeatherMap = () => {\n      this.setState({\n        source: \"OpenWeatherMap\"\n      });\n    };\n\n    this.setWeatherApi = () => {\n      this.setState({\n        source: \"WeatherApi\"\n      });\n    };\n\n    this.prevCurrentProperty = () => {\n      const newIndex = this.state.currentProperty.id - 1;\n      this.setState({\n        currentProperty: this.state.compareCurrentElements[newIndex]\n      });\n    };\n\n    this.getWeatherOpenweathermap = e => {\n      e.preventDefault();\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response); //this.getForecastDaily(response.coord.lat,response.coord.lon)\n        //this.getWeatherWeatherApi(this.state.value)\n\n        this.getWeatherTommorowIo(response.coord.lat, response.coord.lon); //this.getWeatherVisualcrossing(this.state.value)\n        //this.getWeatherWeatherbit(this.state.value)\n\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 1,\n            'date': CalDate(response.dt),\n            'weather': response.weather[0].description,\n            'temp': CalCelsius(response.main.temp),\n            'pressure': response.main.pressure,\n            'wind': CalWindSpeed(response.wind.speed),\n            'image': weatherIcons[response.weather[0].id],\n            'source': \"OpenWeatherMap\"\n          }]\n        });\n        this.setState({\n          currentProperty: this.state.compareCurrentElements[0]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getForecastDaily = (lat, lon) => {\n      console.log(lat);\n      this.state.forecastDailyElements.length = 0;\n      fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key_OWM}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n\n        for (var i = 0; i < 8; i++) {\n          this.setState({\n            forecastDailyElements: [...this.state.forecastDailyElements, {\n              'id': i,\n              'date': CalDate(response.daily[i].dt),\n              'weather': response.daily[i].weather[0].description,\n              'tempMax': CalCelsius(response.daily[i].temp.max),\n              'tempMin': CalCelsius(response.daily[i].temp.min),\n              'pressure': response.daily[i].pressure,\n              'wind': CalWindSpeed(response.daily[i].wind_speed),\n              'image': weatherIcons[response.daily[i].weather[0].id],\n              'clouds': response.daily[i].clouds,\n              'humidity': response.daily[i].humidity,\n              'sunrise': CalTime(response.daily[i].sunrise, response.timezone_offset),\n              'sunset': CalTime(response.daily[i].sunset, response.timezone_offset)\n            }],\n            dailyProperty: this.state.forecastDailyElements[1]\n          });\n        }\n      });\n    };\n\n    this.getWeatherWeatherApi = city => {\n      fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 2,\n            'date': response.current.last_updated,\n            'weather': response.current.condition.text,\n            'temp': response.current.temp_c,\n            'pressure': response.current.pressure_mb,\n            'wind': response.current.wind_kph,\n            'image': weatherIcons[response.current.condition.code],\n            'source': \"WeatherApi\"\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherTommorowIo = (lat, lon) => {\n      fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 3,\n            'date': response.data.timelines[0].startTime,\n            'weather': response.data.timelines[0].intervals[0].values.weatherCode,\n            'temp': response.data.timelines[0].intervals[0].values.temperature,\n            'pressure': response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\n            'wind': CalWindSpeed(response.data.timelines[0].intervals[0].values.windSpeed),\n            'image': weatherIcons[response.data.timelines[0].intervals[0].values.weatherCode],\n            'source': \"TommorowIo\"\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherVisualcrossing = city => {\n      fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 4,\n            'date': response.location.currentConditions.datetime,\n            'weather': response.location.currentConditions.icon,\n            'temp': response.location.currentConditions.temp,\n            'pressure': response.location.currentConditions.sealevelpressure,\n            'wind': response.location.currentConditions.wspd,\n            'image': weatherIcons[0],\n            'source': \"VisualCrossing\"\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.getWeatherWeatherbit = city => {\n      this.state.compareCurrentElements.length = 0;\n      fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&key=${API_key_w}\n        `).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Błąd pobierania danych z API\");\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.setState({\n          compareCurrentElements: [...this.state.compareCurrentElements, {\n            'id': 5,\n            'date': response.data[0].ob_time,\n            'weather': response.data[0].weather.description,\n            'temp': response.data[0].temp,\n            'pressure': response.data[0].pres,\n            'wind': 20 * response.data[0].wind_spd,\n            'image': weatherIcons[0],\n            'source': \"Weatherbit\"\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => {\n          return {\n            error: true,\n            city: prevState.city\n          };\n        });\n      });\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      compareCurrentElements: [],\n      forecastDailyElements: [],\n      source: \"OpenWeatherMap\",\n      currentProperty: undefined,\n      dailyProperty: undefined,\n      error: false\n    };\n  }\n\n  render() {\n    if (this.state.source == \"OpenWeatherMap\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            value: this.state.value,\n            handler: this.inputHandler,\n            submit: this.getWeatherOpenweathermap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setOpenWeatherMap(),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setWeatherApi(),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compare-main-cards\",\n          children: this.state.currentProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"compare-cards-slider\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"compare-cards-slider-wrapper\",\n              style: {\n                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\n              },\n              children: this.state.compareCurrentElements.map(fde => /*#__PURE__*/_jsxDEV(CompareCurrentWeatherItem, {\n                element: fde\n              }, fde.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            value: this.state.value,\n            handler: this.inputHandler,\n            submit: this.getWeatherOpenweathermap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setOpenWeatherMap(),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setWeatherApi(),\n          children: \"OpenWeatherMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nconst weatherIcons = {\n  200: '/images/200.png',\n  201: '/images/201.png',\n  202: '/images/202.png',\n  210: '/images/210.png',\n  211: '/images/211.png',\n  212: '/images/212.png',\n  221: '/images/212.png',\n  230: '/images/230D.png',\n  231: '/images/231.png',\n  232: '/images/232.png',\n  300: '/images/300D.png',\n  301: '/images/301.png',\n  302: '/images/302.png',\n  310: '/images/310D.png',\n  311: '/images/311.png',\n  312: '/images/312.png',\n  313: '/images/313_1.png',\n  314: '/images/314.png',\n  321: '/images/321.png',\n  500: '/images/500D.png',\n  501: '/images/501.png',\n  502: '/images/502.png',\n  503: '/images/503.png',\n  504: '/images/504.png',\n  511: '/images/511.png',\n  520: '/images/520D.png',\n  521: '/images/521_2.png',\n  522: '/images/522_1.png',\n  531: '/images/522_1.png',\n  600: '/images/600D.png',\n  601: '/images/601.png',\n  602: '/images/602.png',\n  611: '/images/611.png',\n  612: '/images/612D.png',\n  613: '/images/613.png',\n  615: '/images/615D.png',\n  616: '/images/616.png',\n  620: '/images/620D.png',\n  621: '/images/621.png',\n  622: '/images/622.png',\n  701: '/images/701_2.png',\n  711: '/images/701_2.png',\n  721: '/images/701_2.png',\n  731: '/images/701_2.png',\n  741: '/images/701_2.png',\n  751: '/images/701_2.png',\n  761: '/images/701_2.png',\n  762: '/images/701_2.png',\n  771: '/images/701_2.png',\n  781: '/images/701_2.png',\n  800: '/images/800D.png',\n  801: '/images/801D.png',\n  802: '/images/802D.png',\n  803: '/images/803D.png',\n  804: '/images/804.png',\n  1000: '/images/800D.png',\n  1003: '/images/801D.png',\n  1006: '/images/802D.png',\n  1009: '/images/804.png',\n  1030: '/images/701_2.png',\n  1063: '/images/500D.png',\n  1066: '/images/600.png',\n  1069: '/images/613.png',\n  1072: '/images/511.png',\n  1087: '/images/200.png',\n  1114: '/images/602.png',\n  1117: '/images/622.png',\n  1135: '/images/702_1.png',\n  1147: '/images/702_1.png',\n  1150: '/images/300D.png',\n  1153: '/images/301.png',\n  1168: '/images/511.png',\n  1171: '/images/501.png',\n  1180: '/images/502.png',\n  1183: '/images/500D.png',\n  1186: '/images/500D.png',\n  1189: '/images/501.png',\n  1192: '/images/502.png',\n  1195: '/images/503.png',\n  1198: '/images/511.png',\n  1201: '/images/511.png',\n  1204: '/images/611.png',\n  1207: '/images/612D.png',\n  1210: '/images/600D.png',\n  1213: '/images/600D.png',\n  1216: '/images/601.png',\n  1219: '/images/601.png',\n  1222: '/images/602.png',\n  1225: '/images/602.png',\n  1237: '/images/511.png',\n  1240: '/images/520.png',\n  1243: '/images/521_2.png',\n  1246: '/images/522_1.png',\n  1249: '/images/612D.png',\n  1252: '/images/613.png',\n  1255: '/images/612D.png',\n  1258: '/images/613.png',\n  1261: '/images/511.png',\n  1264: '/images/511.png',\n  1273: '/images/200.png',\n  1276: '/images/201.png',\n  1279: '/images/602.png',\n  1282: '/images/602.png',\n  4201: '/images/502.png',\n  4001: '/images/501.png',\n  4200: '/images/500D.png',\n  6201: '/images/511.png',\n  6001: '/images/511.png',\n  6200: '/images/511.png',\n  6000: '/images/511.png',\n  4000: '/images/301.png',\n  7101: '/images/511.png',\n  7000: '/images/511.png',\n  7102: '/images/511.png',\n  5101: '/images/602.png',\n  5000: '/images/601.png',\n  5100: '/images/600D.png',\n  5001: '/images/601.png',\n  8000: '/images/201.png',\n  2100: '/images/701_2.png',\n  2000: '/images/701_2.png',\n  1001: '/images/804.png',\n  1102: '/images/803D.png',\n  1101: '/images/802D.png',\n  1100: '/images/801D.png',\n  1000: '/images/800D.png'\n};\nexport default Compare;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/client/src/components/Compare/Compare.js"],"names":["React","Form","CalDate","CalTime","CalCelsius","CalWindSpeed","CompareCurrentWeatherItem","API_key_OWM","API_key_WA","API_key_w","Compare","Component","constructor","props","nextCurrentProperty","newIndex","state","currentProperty","id","setState","compareCurrentElements","console","log","setOpenWeatherMap","source","setWeatherApi","prevCurrentProperty","getWeatherOpenweathermap","e","preventDefault","fetch","value","then","response","ok","Error","json","getWeatherTommorowIo","coord","lat","lon","dt","weather","description","main","temp","pressure","wind","speed","weatherIcons","catch","err","prevState","error","city","getForecastDaily","forecastDailyElements","length","i","daily","max","min","wind_speed","clouds","humidity","sunrise","timezone_offset","sunset","dailyProperty","getWeatherWeatherApi","current","last_updated","condition","text","temp_c","pressure_mb","wind_kph","code","data","timelines","startTime","intervals","values","weatherCode","temperature","pressureSurfaceLevel","windSpeed","getWeatherVisualcrossing","location","currentConditions","datetime","icon","sealevelpressure","wspd","getWeatherWeatherbit","ob_time","pres","wind_spd","inputHandler","target","undefined","render","map","fde"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem'\r\nimport './Compare.css';\r\n\r\nconst API_key_OWM=\"157d33f8987d245bc6a1997408e90015\"\r\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\"\r\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\"\r\nclass Compare extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            value:\"\",\r\n            compareCurrentElements:[\r\n            ],\r\n            forecastDailyElements:[\r\n            ],\r\n            source:\"OpenWeatherMap\",\r\n            currentProperty:undefined,\r\n            dailyProperty:undefined,\r\n            error:false\r\n        }\r\n    }\r\n    nextCurrentProperty = () => {\r\n        const newIndex = this.state.currentProperty.id +1\r\n        this.setState({\r\n            currentProperty: this.state.compareCurrentElements[newIndex]\r\n        })\r\n        console.log(newIndex)\r\n    }\r\n    setOpenWeatherMap = () => {\r\n        this.setState({\r\n            source:\"OpenWeatherMap\"\r\n        })\r\n    }\r\n    setWeatherApi = () => {\r\n        this.setState({\r\n            source:\"WeatherApi\"\r\n        })\r\n    }\r\n\r\n\r\n    prevCurrentProperty = () => {\r\n        const newIndex = this.state.currentProperty.id -1\r\n        this.setState({\r\n            currentProperty: this.state.compareCurrentElements[newIndex]\r\n        })\r\n    }\r\n\r\n    getWeatherOpenweathermap = (e) =>{\r\n        e.preventDefault()\r\n            \r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            //this.getForecastDaily(response.coord.lat,response.coord.lon)\r\n           //this.getWeatherWeatherApi(this.state.value)\r\n            this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\r\n            //this.getWeatherVisualcrossing(this.state.value)\r\n            //this.getWeatherWeatherbit(this.state.value)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':1,\r\n                    'date':CalDate(response.dt),\r\n                    'weather':response.weather[0].description,\r\n                    'temp':CalCelsius(response.main.temp),\r\n                    'pressure':response.main.pressure,\r\n                    'wind':CalWindSpeed(response.wind.speed),\r\n                    'image':weatherIcons[response.weather[0].id],\r\n                    'source':\"OpenWeatherMap\"\r\n                }],\r\n            })\r\n            this.setState({\r\n                currentProperty:this.state.compareCurrentElements[0]\r\n            }) \r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    getForecastDaily = (lat,lon)=>{\r\n\r\n        console.log(lat)\r\n        this.state.forecastDailyElements.length=0\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key_OWM}`)\r\n          .then(response => {\r\n              if(response.ok){\r\n                  return response\r\n              }\r\n              throw Error(\"Błąd pobierania danych z API\")\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              console.log(response)\r\n              for (var i = 0; i < 8; i++) {\r\n                this.setState({\r\n                    forecastDailyElements:[...this.state.forecastDailyElements,{\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'tempMax':CalCelsius(response.daily[i].temp.max),\r\n                        'tempMin':CalCelsius(response.daily[i].temp.min),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                        'clouds':response.daily[i].clouds,\r\n                        'humidity':response.daily[i].humidity,\r\n                        'sunrise':CalTime(response.daily[i].sunrise,response.timezone_offset) ,\r\n                        'sunset':CalTime(response.daily[i].sunset,response.timezone_offset)\r\n                    }],\r\n                    dailyProperty:this.state.forecastDailyElements[1]\r\n                })\r\n            }  \r\n          })\r\n    }\r\n    getWeatherWeatherApi = (city) =>{\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':2,\r\n                    'date':response.current.last_updated,\r\n                    'weather':response.current.condition.text,\r\n                    'temp':response.current.temp_c,\r\n                    'pressure':response.current.pressure_mb,\r\n                    'wind':response.current.wind_kph,\r\n                    'image':weatherIcons[response.current.condition.code],\r\n                    'source':\"WeatherApi\"\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    getWeatherTommorowIo = (lat,lon) =>{\r\n            \r\n        fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':3,\r\n                    'date':response.data.timelines[0].startTime,\r\n                    'weather':response.data.timelines[0].intervals[0].values.weatherCode,\r\n                    'temp':response.data.timelines[0].intervals[0].values.temperature,\r\n                    'pressure':response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\r\n                    'wind':CalWindSpeed(response.data.timelines[0].intervals[0].values.windSpeed),\r\n                    'image':weatherIcons[response.data.timelines[0].intervals[0].values.weatherCode],\r\n                    'source':\"TommorowIo\"\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }\r\n    \r\n    getWeatherVisualcrossing = (city) =>{\r\n            \r\n        fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':4,\r\n                    'date':response.location.currentConditions.datetime,\r\n                    'weather':response.location.currentConditions.icon,\r\n                    'temp':response.location.currentConditions.temp,\r\n                    'pressure':response.location.currentConditions.sealevelpressure,\r\n                    'wind':response.location.currentConditions.wspd,\r\n                    'image':weatherIcons[0],\r\n                    'source':\"VisualCrossing\"\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    } \r\n    getWeatherWeatherbit = (city) =>{\r\n\r\n        this.state.compareCurrentElements.length=0\r\n            \r\n        fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&key=${API_key_w}\r\n        `)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':5,\r\n                    'date':response.data[0].ob_time,\r\n                    'weather':response.data[0].weather.description,\r\n                    'temp':response.data[0].temp,\r\n                    'pressure':response.data[0].pres,\r\n                    'wind':20*response.data[0].wind_spd,\r\n                    'image':weatherIcons[0],\r\n                    'source':\"Weatherbit\"\r\n                }],\r\n            })\r\n        })\r\n        .catch(err =>{\r\n        console.log(err)\r\n        this.setState(prevState =>{\r\n            return{\r\n            error:true,\r\n            city:prevState.city\r\n        }})\r\n    })\r\n    }  \r\n    inputHandler=(e)=>{\r\n        this.setState({\r\n            value:e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.source==\"OpenWeatherMap\"){\r\n            return( <div>\r\n                <div className=\"city-form\">\r\n                <Form \r\n                value={this.state.value}  \r\n                handler={this.inputHandler}\r\n                submit={this.getWeatherOpenweathermap}\r\n                /> \r\n                </div>\r\n                <button \r\n                onClick={() => this.setOpenWeatherMap()} \r\n                >OpenWeatherMap\r\n                </button>\r\n                <button \r\n                onClick={() => this.setWeatherApi()} \r\n                >OpenWeatherMap\r\n                </button>\r\n                <div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ?( \r\n                    <div className=\"compare-cards-slider\">\r\n                        <div className=\"compare-cards-slider-wrapper\" style={{\r\n                            'transform':`translateX(-${this.state.currentProperty.id*(100/this.state.compareCurrentElements.length)}%)`\r\n                        }}>\r\n                            {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem key={fde.id} element={fde} />)}\r\n                        </div>\r\n                    </div>\r\n                    ):null}\r\n                </div>\r\n            </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <div className=\"city-form\">\r\n                    <Form \r\n                    value={this.state.value}  \r\n                    handler={this.inputHandler}\r\n                    submit={this.getWeatherOpenweathermap}\r\n                    /> \r\n                    </div>\r\n                    <button \r\n                    onClick={() => this.setOpenWeatherMap()} \r\n                    >OpenWeatherMap\r\n                    </button>\r\n                    <button \r\n                    onClick={() => this.setWeatherApi()} \r\n                    >OpenWeatherMap\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\nconst weatherIcons = {\r\n    200:'/images/200.png',\r\n    201:'/images/201.png',\r\n    202:'/images/202.png',\r\n    210:'/images/210.png',\r\n    211:'/images/211.png',\r\n    212:'/images/212.png',\r\n    221:'/images/212.png',\r\n    230:'/images/230D.png',\r\n    231:'/images/231.png',\r\n    232:'/images/232.png',\r\n    300:'/images/300D.png',\r\n    301:'/images/301.png',\r\n    302:'/images/302.png',\r\n    310:'/images/310D.png',\r\n    311:'/images/311.png',\r\n    312:'/images/312.png',\r\n    313:'/images/313_1.png',\r\n    314:'/images/314.png',\r\n    321:'/images/321.png',\r\n    500:'/images/500D.png',\r\n    501:'/images/501.png',\r\n    502:'/images/502.png',\r\n    503:'/images/503.png',\r\n    504:'/images/504.png',\r\n    511:'/images/511.png',\r\n    520:'/images/520D.png',\r\n    521:'/images/521_2.png',\r\n    522:'/images/522_1.png',\r\n    531:'/images/522_1.png',\r\n    600:'/images/600D.png',\r\n    601:'/images/601.png',\r\n    602:'/images/602.png',\r\n    611:'/images/611.png',\r\n    612:'/images/612D.png',\r\n    613:'/images/613.png',\r\n    615:'/images/615D.png',\r\n    616:'/images/616.png',\r\n    620:'/images/620D.png',\r\n    621:'/images/621.png',\r\n    622:'/images/622.png',\r\n    701:'/images/701_2.png',\r\n    711:'/images/701_2.png',\r\n    721:'/images/701_2.png',\r\n    731:'/images/701_2.png',\r\n    741:'/images/701_2.png',\r\n    751:'/images/701_2.png',\r\n    761:'/images/701_2.png',\r\n    762:'/images/701_2.png',\r\n    771:'/images/701_2.png',\r\n    781:'/images/701_2.png',\r\n    800:'/images/800D.png',\r\n    801:'/images/801D.png',\r\n    802:'/images/802D.png',\r\n    803:'/images/803D.png',\r\n    804:'/images/804.png',\r\n    1000:'/images/800D.png',\r\n    1003:'/images/801D.png',\r\n    1006:'/images/802D.png',\r\n    1009:'/images/804.png',\r\n    1030:'/images/701_2.png',\r\n    1063:'/images/500D.png',\r\n    1066:'/images/600.png',\r\n    1069:'/images/613.png',\r\n    1072:'/images/511.png',\r\n    1087:'/images/200.png',\r\n    1114:'/images/602.png',\r\n    1117:'/images/622.png',\r\n    1135:'/images/702_1.png',\r\n    1147:'/images/702_1.png',\r\n    1150:'/images/300D.png',\r\n    1153:'/images/301.png',\r\n    1168:'/images/511.png',\r\n    1171:'/images/501.png',\r\n    1180:'/images/502.png',\r\n    1183:'/images/500D.png',\r\n    1186:'/images/500D.png',\r\n    1189:'/images/501.png',\r\n    1192:'/images/502.png',\r\n    1195:'/images/503.png',\r\n    1198:'/images/511.png',\r\n    1201:'/images/511.png',\r\n    1204:'/images/611.png',\r\n    1207:'/images/612D.png',\r\n    1210:'/images/600D.png',\r\n    1213:'/images/600D.png',\r\n    1216:'/images/601.png',\r\n    1219:'/images/601.png',\r\n    1222:'/images/602.png',\r\n    1225:'/images/602.png',\r\n    1237:'/images/511.png',\r\n    1240:'/images/520.png',\r\n    1243:'/images/521_2.png',\r\n    1246:'/images/522_1.png',\r\n    1249:'/images/612D.png',\r\n    1252:'/images/613.png',\r\n    1255:'/images/612D.png',\r\n    1258:'/images/613.png',\r\n    1261:'/images/511.png',\r\n    1264:'/images/511.png',\r\n    1273:'/images/200.png',\r\n    1276:'/images/201.png',\r\n    1279:'/images/602.png',\r\n    1282:'/images/602.png',\r\n    4201:'/images/502.png',\r\n    4001:'/images/501.png',\r\n    4200:'/images/500D.png',\r\n    6201:'/images/511.png',\r\n    6001:'/images/511.png',\r\n    6200:'/images/511.png',\r\n    6000:'/images/511.png',\r\n    4000:'/images/301.png',\r\n    7101:'/images/511.png',\r\n    7000:'/images/511.png',\r\n    7102:'/images/511.png',\r\n    5101:'/images/602.png',\r\n    5000:'/images/601.png',\r\n    5100:'/images/600D.png',\r\n    5001:'/images/601.png',\r\n    8000:'/images/201.png',\r\n    2100:'/images/701_2.png',\r\n    2000:'/images/701_2.png',\r\n    1001:'/images/804.png',\r\n    1102:'/images/803D.png',\r\n    1101:'/images/802D.png',\r\n    1100:'/images/801D.png',\r\n    1000:'/images/800D.png',\r\n}\r\nexport default Compare"]},"metadata":{},"sourceType":"module"}