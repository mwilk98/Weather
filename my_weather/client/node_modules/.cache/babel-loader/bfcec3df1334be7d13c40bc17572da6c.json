{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vened\\\\Desktop\\\\Pogoda\\\\my_weather\\\\src\\\\components\\\\forecast\\\\Forecast.js\";\nimport React from 'react';\nimport ForecastItem from './ForecastItem';\nimport CurrentWeather from '../currentWeather/CurrentWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"157d33f8987d245bc6a1997408e90015\";\nconst city = \"Kielce\";\nconst country = \"PL\";\n\nclass Forecast extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      elements: []\n    };\n\n    this.getForecast = async props => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.props.city},${this.props.country}&APPID=${API_key}`);\n      const response = await api_call.json();\n      console.log(response);\n\n      for (var i = 0; i < 10; i++) {\n        this.setState({\n          elements: [...this.state.elements, {\n            'id': response.cod,\n            'title': response.timezone\n          }]\n        });\n      }\n    };\n  }\n\n  render() {\n    const elements = this.state.elements.map(e => {\n      return /*#__PURE__*/_jsxDEV(ForecastItem, {\n        element: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    });\n    console.log(this.props.city);\n    console.log(this.props.country);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Weather App\", /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getForecast.bind(this),\n          children: \"Pobierz prognoze pogody\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), elements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Pogoda/my_weather/src/components/forecast/Forecast.js"],"names":["React","ForecastItem","CurrentWeather","API_key","city","country","Forecast","Component","state","elements","getForecast","props","api_call","fetch","response","json","console","log","i","setState","cod","timezone","render","map","e","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAEA,MAAMC,OAAO,GAAC,kCAAd;AACA,MAAMC,IAAI,GAAG,QAAb;AACA,MAAMC,OAAO,GAAG,IAAhB;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC5B;AACFC,MAAAA,QAAQ,EAAC;AADP,KAD4B;;AAAA,SAKlCC,WALkC,GAKpB,MAAMC,KAAN,IAAc;AAEtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,oDAAmD,KAAKF,KAAL,CAAWP,IAAK,IAAG,KAAKO,KAAL,CAAWN,OAAQ,UAASF,OAAQ,EADjF,CAA5B;AAIA,YAAMW,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,aAAKC,QAAL,CAAc;AACVV,UAAAA,QAAQ,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAwB;AAC7B,kBAAKK,QAAQ,CAACM,GADe;AAE7B,qBAAQN,QAAQ,CAACO;AAFY,WAAxB;AADC,SAAd;AAMH;AAEJ,KAvBiC;AAAA;;AAwBlCC,EAAAA,MAAM,GAAE;AACJ,UAAMb,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwBC,CAAC,IAAE;AACxC,0BAAO,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFgB,CAAjB;AAGAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWP,IAAvB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWN,OAAvB;AACA,wBACI;AAAA,6CAEI;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAE,KAAKK,WAAL,CAAiBe,IAAjB,CAAsB,IAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKhB,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AArCiC;;AAwCtC,eAAeH,QAAf","sourcesContent":["import React from 'react'\r\nimport ForecastItem from './ForecastItem';\r\nimport CurrentWeather from '../currentWeather/CurrentWeather'\r\n\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\nconst city = \"Kielce\"\r\nconst country = \"PL\"\r\n\r\nclass Forecast extends React.Component{\r\n    state={\r\n        elements:[\r\n        ]\r\n    }\r\n    getForecast = async(props)=>{\r\n    \r\n          const api_call = await fetch(\r\n            `http://api.openweathermap.org/data/2.5/weather?q=${this.props.city},${this.props.country}&APPID=${API_key}`\r\n            );\r\n      \r\n          const response = await api_call.json();\r\n      \r\n          console.log(response)\r\n          for (var i = 0; i < 10; i++) {\r\n            this.setState({\r\n                elements:[...this.state.elements,{\r\n                    'id':response.cod,\r\n                    'title':response.timezone\r\n                }],\r\n            })\r\n        } \r\n \r\n    }\r\n    render(){\r\n        const elements = this.state.elements.map(e=>{\r\n            return <ForecastItem element={e}/>\r\n        })\r\n        console.log(this.props.city)\r\n        console.log(this.props.country)\r\n        return(\r\n            <div>\r\n                Weather App\r\n                <td><button onClick={this.getForecast.bind(this)}>Pobierz prognoze pogody</button></td>\r\n                {elements}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast"]},"metadata":{},"sourceType":"module"}